"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[532],{29532:function(t,e,r){r.r(e),r.d(e,{SudokuSolverDemo:function(){return SudokuSolverDemo}});var i=r(35944),o=r(43118),l=r(18872),n=r(57293),s=r(45697),u=r.n(s),a=r(67294),h=r(48478);let d=new o.M({childMatrixWidth:3}),{size:f}=d;let SudokuSolverDemo=class SudokuSolverDemo extends a.Component{shouldComponentUpdate(t,e){let r=this.props,i=this.state;return i.previewHeight!==e.previewHeight||i.puzzleText!==e.puzzleText||i.solutionText!==e.solutionText||!(0,h.X)(r.puzzle,t.puzzle)||!(0,h.X)(r.solution,t.solution)}render(){let{previewRef:t,onPuzzleTextChange:e}=this,{previewHeight:r,puzzleText:o,solutionText:l}=this.state;return(0,i.BX)("div",{className:c.container,children:[(0,i.tZ)("textarea",{className:c.editor,style:{height:void 0===r?void 0:r+2},value:o,onChange:e}),(0,i.tZ)("pre",{ref:t,className:c.preview,children:(0,i.tZ)("code",{children:l})})]})}componentDidMount(){let t=this.previewRef.current;if(t){let{height:e}=t.getBoundingClientRect();this.setState({previewHeight:e})}}componentDidUpdate(t){let e=this.previewRef.current;if(e){let{height:t}=e.getBoundingClientRect();this.setState({previewHeight:t})}t.puzzle!==this.props.puzzle&&this.setState({puzzleText:this.stringifyPuzzle(f,this.props.puzzle)}),t.solution!==this.props.solution&&this.setState({solutionText:this.stringifyPuzzle(f,this.props.solution)})}stringifyPuzzle(t,e){let r=(0,o.OA)(e,t);return r.map(t=>t.map(t=>String(t).padStart(2)).join(" ")).join("\n")}parsePuzzle(t,e){let r=t.split(/\s*\n\s*/g).filter(t=>t.length>0).map(t=>t.split(/\s*[,\s]\s*/g).filter(t=>t.length>0).map(t=>Number(t))).flat();return this.checkPuzzle(r,e)?r:null}checkPuzzle(t,e){if(t.length!==e.BOARD)return!1;for(let r of t)if(!Number.isInteger(r)||r<-1||r>=e.MATRIX)return!1;return!0}constructor(t){super(t),this.onPuzzleTextChange=t=>{let e=t.target.value;this.setState({puzzleText:e});let r=this.parsePuzzle(e,f);null!==r&&d.solve(r,null)&&this.props.onPuzzleChange(r)},this.state={previewHeight:void 0,puzzleText:this.stringifyPuzzle(f,t.puzzle),solutionText:this.stringifyPuzzle(f,t.solution)},this.previewRef={current:null}}};SudokuSolverDemo.displayName="SudokuSolverDemo",SudokuSolverDemo.propTypes={puzzle:u().array.isRequired,solution:u().array.isRequired,onPuzzleChange:u().func.isRequired};let c={container:(0,l.iv)({display:"flex",width:"100%",lineHeight:"28px",fontFamily:"Consolas, 'Source Code Pro', 'Roboto Mono', monospace, sans-serif",fontSize:"16px",["@media screen and ".concat(n.u3.smMinus)]:{flexDirection:"column"}}),editor:(0,l.iv)({flex:"1 1 0",boxSizing:"border-box",overflow:"auto",padding:"14px",border:"none",outline:"none",lineHeight:"inherit",fontFamily:"inherit",fontSize:"inherit",resize:"none",transition:"all 0.30s ease-in-out","&:focus":{boxShadow:"0 0 5px rgb(81, 203, 238)",border:"1px solid rgb(81, 203, 238)"},["@media screen and ".concat(n.u3.smMinus)]:{flex:"0 0 auto"}}),preview:(0,l.iv)({flex:"1 1 0",boxSizing:"border-box",overflow:"auto",padding:"14px",margin:"0",color:"#083ca6",background:"#f6f6f6",lineHeight:"inherit",fontFamily:"inherit",fontSize:"inherit","> code":{lineHeight:"inherit",fontFamily:"inherit",fontSize:"inherit"},["@media screen and ".concat(n.u3.smMinus)]:{flex:"0 0 auto"}})}},66420:function(t,e,r){function randomInt(t){let e=Math.random()*t>>0;return e===t?t-1:e}function knuthShuffle(t,e=0,r=t.length){if(e<0&&(e=0),r>t.length&&(r=t.length),e+1>=r)return;let i=r-e;for(let o=i-1,l=r-1;o>0;--o,--l){let r=randomInt(o)+e,i=t[r];t[r]=t[l],t[l]=i}}r.d(e,{Er:function(){return knuthShuffle},Iy:function(){return randomInt},ZP:function(){return knuthShuffle}})},43118:function(t,e,r){r.d(e,{wY:function(){return SudokuCreator},$X:function(){return SudokuSize},M:function(){return SudokuSolver},_g:function(){return copySudokuBoardData},iN:function(){return createMatrixCoordinateMap},s0:function(){return createSudokuBoardData},OA:function(){return toMatrixStyleBoardData}});var i=r(66420);let DancingLinkX=class DancingLinkX{_count;_row;_col;_L;_R;_U;_D;_sz;constructor(t){let{MAX_N:e}=t;this._count=Array(e),this._row=Array(e),this._col=Array(e),this._L=Array(e),this._R=Array(e),this._U=Array(e),this._D=Array(e),this._sz=0}destroy(){this._sz=0,this._count.length=0,this._row.length=0,this._col.length=0,this._L.length=0,this._R.length=0,this._U.length=0,this._D.length=0}init(t){let{_L:e,_R:r,_U:i,_D:o,_count:l}=this,n=t+1;for(let t=0;t<n;++t)e[t]=t-1,r[t]=t+1,i[t]=t,o[t]=t;r[t]=0,e[0]=t,l.fill(0,0,n),this._sz=n}addRow(t,e){let{_count:r,_row:i,_col:o,_L:l,_R:n,_U:s,_D:u}=this,{_sz:a}=this,h=a;for(let h=0;h<e.length;++h,++a){let d=e[h];i[a]=t,o[a]=d,r[d]+=1,l[a]=a-1,n[a]=a+1,u[a]=d,u[s[d]]=a,s[a]=s[d],s[d]=a}n[a-1]=h,l[h]=a-1,this._sz=a}solve(){if(0===this._sz)return null;let t=[];return this._algorithmX(0,t)?t:null}_algorithmX(t,e){let{_count:r,_row:i,_col:o,_L:l,_R:n,_D:s}=this;if(0===n[0])return e.length=t,!0;let u=n[0];for(let t=n[0];0!==t;t=n[t])r[t]<r[u]&&(u=t);this._removeColumn(u);for(let r=s[u];r!==u;r=s[r]){e[t]=i[r];for(let t=n[r];t!==r;t=n[t])this._removeColumn(o[t]);if(this._algorithmX(t+1,e))return!0;for(let t=l[r];t!==r;t=l[t])this._restoreColumn(o[t])}return this._restoreColumn(u),!1}_removeColumn(t){let{_count:e,_col:r,_L:i,_R:o,_U:l,_D:n}=this;i[o[t]]=i[t],o[i[t]]=o[t];for(let i=n[t];i!==t;i=n[i])for(let t=o[i];t!==i;t=o[t])l[n[t]]=l[t],n[l[t]]=n[t],e[r[t]]-=1}_restoreColumn(t){let{_count:e,_col:r,_L:i,_R:o,_U:l,_D:n}=this;for(let o=l[t];o!==t;o=l[o])for(let t=i[o];t!==o;t=i[t])e[r[t]]+=1,l[n[t]]=t,n[l[t]]=t;i[o[t]]=t,o[i[t]]=t}};let SudokuSize=class SudokuSize{BASE_1;BASE_2;BASE_3;BASE_4;MATRIX_RANK;MATRIX;BOARD;constructor(t){let e=t*t,r=e*t;this.MATRIX_RANK=this.BASE_1=t,this.MATRIX=this.BASE_2=e,this.BASE_3=r,this.BOARD=this.BASE_4=r*t}};let createSudokuBoardData=t=>Array(t.BOARD),fillSudokuBoardData=(t,e,r)=>{t.fill(e,0,r.BOARD)},copySudokuBoardData=(t,e,r)=>{let{BOARD:i}=r;for(let r=0;r<i;++r)e[r]=t[r]},toMatrixStyleBoardData=(t,e)=>{let r=[],{MATRIX:i}=e;for(let e=0,o=0;e<i;++e){let l=[];r[e]=l;for(let e=0;e<i;++e,++o)l[e]=t[o]}return r};function createMatrixCoordinateMap(t){let{BASE_1:e,BASE_3:r,MATRIX:i,BOARD:o}=t,l=Array(o);for(let t=0,n=0;t<o;t+=r)for(let o=t,s=t+r;o<s;o+=i)for(let r=0;r<i;r+=e){let i=n+e;l.fill(t+r,n,i),n=i}return l}let SudokuSolver=class SudokuSolver{size;DL_TOTAL_COLUMNS;dlx;matCodeMap;constraints=[,,,,];constructor(t){let{childMatrixWidth:e}=t,r=new SudokuSize(e),i=4*r.BOARD,o=r.BOARD*r.MATRIX,l=i*o+r.MATRIX+1,n=new DancingLinkX({MAX_N:l});this.size=r,this.DL_TOTAL_COLUMNS=i,this.dlx=n,this.matCodeMap=function(t){let{BASE_1:e,BASE_3:r,MATRIX:i,BOARD:o}=t,l=Array(o);for(let t=0,n=0;t<o;t+=r,n+=e)for(let o=t,s=t+r;o<s;o+=i)for(let t=o,r=o+i,s=n;t<r;t+=e)l.fill(s++,t,t+e);return l}(r)}solve(t,e){let{size:r,DL_TOTAL_COLUMNS:i,constraints:o,matCodeMap:l,dlx:n}=this,{MATRIX:s,BOARD:u}=r,encode=(t,e)=>t*u+e+1;n.init(i);for(let e=0,r=0;e<s;++e)for(let i=0;i<s;++i,++r){let u=t[r],a=l[r],h=-1===u?0:u,d=-1===u?s:u+1;for(let t=h;t<d;++t){o[0]=encode(0,r),o[1]=encode(1,e*s+t),o[2]=encode(2,i*s+t),o[3]=encode(3,a*s+t);let l=r*s+t+1;n.addRow(l,o)}}let a=n.solve();if(null===a)return!1;if(null!==e)for(let t of a){let r=t-1,i=r%s,o=r/s>>0;e[o]=i}return!0}};let SudokuCreator=class SudokuCreator{size;solver;matCoordinateMap;gridCodes;candidates;availableNums;tmpBoard;difficulty;constructor(t){let{childMatrixWidth:e,difficulty:r=.2}=t,i=new SudokuSize(e),o=new SudokuSolver({childMatrixWidth:e}),l=Array(i.BOARD);for(let t=0;t<i.BOARD;++t)l[t]=t;this.size=i,this.solver=o,this.matCoordinateMap=createMatrixCoordinateMap(i),this.gridCodes=l,this.difficulty=this._resolveDifficulty(r),this.candidates=Array(i.MATRIX),this.availableNums=Array(i.MATRIX),this.tmpBoard=createSudokuBoardData(i)}createSudoku(t){null!=t&&(this.difficulty=this._resolveDifficulty(t));let e=this._createSolution(),r=this._createPuzzle(e);return{puzzle:r,solution:e}}_createSolution(){let{size:t,candidates:e,gridCodes:r,solver:o,tmpBoard:l}=this;fillSudokuBoardData(l,-1,t),(0,i.Er)(r);let n=Math.round((.3*Math.random()+.2)*t.BOARD),s=Math.max(t.BASE_3,Math.min(t.BOARD,n));for(let t=0;t<s;++t){let o=r[t],n=this._collectCandidates(l,o);if(n<1)continue;let s=(0,i.Iy)(n),u=e[s];l[o]=u}let u=createSudokuBoardData(t);for(let t=0;t<s;++t){let e=r[t];if(-1!==e){if(o.solve(l,u))return u;l[e]=-1}}throw Error("[createSolution] This is impossible!")}_createPuzzle(t){let{size:e,candidates:r,gridCodes:o,solver:l,difficulty:n}=this,s=createSudokuBoardData(e);copySudokuBoardData(t,s,e),(0,i.Er)(o);let u=Math.floor(e.BOARD*n);for(let e=0;e<u;++e){let i=o[e],n=this._collectCandidates(s,i),u=0;for(;u<n&&(s[i]=r[u],!l.solve(s,null));++u);s[i]=u<n?t[i]:-1}return s}_collectCandidates(t,e){let{size:r,matCoordinateMap:i,candidates:o,availableNums:l}=this,{MATRIX_RANK:n,MATRIX:s,BOARD:u}=r,a=e%s,h=e-a,d=i[e];l.fill(!0);for(let e=h,r=h+s;e<r;++e){let r=t[e];-1!==r&&(l[r]=!1)}for(let e=a;e<u;e+=s){let r=t[e];-1!==r&&(l[r]=!1)}for(let e=d,r=0;r<n;++r,e+=s)for(let r=e,i=e+n;r<i;++r){let e=t[r];-1!==e&&(l[e]=!1)}let f=0;for(let t=0;t<s;++t)l[t]&&(o[f++]=t);return f}_resolveDifficulty(t){return .8*Math.max(0,Math.min(1,t))+.2}}}}]);