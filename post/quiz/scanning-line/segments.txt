3:I[5613,[],""]
5:I[31778,[],""]
7:I[79286,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],"SiteProvider"]
8:I[54110,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],""]
9:I[74117,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],"MaterialThemeProvider"]
a:I[55153,["74","static/chunks/74-31f764c22632bceb.js","800","static/chunks/800-4848173b49d8d689.js","160","static/chunks/app/not-found-79f3557760569a3b.js"],"NotFoundView"]
4:["slug","quiz/scanning-line/segments","c"]
0:["eyS7yEHAsi6_ceCdSwHos",[[["",{"children":["(post)",{"children":["post",{"children":[["slug","quiz/scanning-line/segments","c"],{"children":["__PAGE__?{\"slug\":[\"quiz\",\"scanning-line\",\"segments\"]}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(post)",{"children":["post",{"children":[["slug","quiz/scanning-line/segments","c"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children","post","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children","post","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L6",null]]},[null,["$","html",null,{"lang":"en","className":"__className_324942","children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"utf8"}],["$","meta","viewport",{"name":"viewport","content":"initial-scale=1.0, width=device-width"}],["$","meta",null,{"name":"application-name","content":"guanghechen"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"光和尘"}],["$","meta",null,{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta",null,{"name":"description","content":"Guanghechen's personal site"}],["$","meta",null,{"name":"format-detection","content":"telephone=no"}],["$","meta",null,{"name":"mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"msapplication-config","content":"/icons/browserconfig.xml"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#2B5797"}],["$","meta",null,{"name":"msapplication-tap-highlight","content":"no"}],["$","meta",null,{"name":"theme-color","content":"#a2466c"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"property":"og:title","content":"光和尘"}],["$","meta",null,{"property":"og:description","content":"光和尘的个人站点"}],["$","meta",null,{"property":"og:site_name","content":"guanghechen"}],["$","meta",null,{"property":"og:url","content":"https://preview.me.guanghechen.com"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.png"}]]}],["$","body",null,{"children":["$","$L7",null,{"children":["$","$L8",null,{"children":["$","$L9",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$La",null,{}],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2159a4b672631e08.css","precedence":"next","crossOrigin":""}]]}]}]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f2ccec9f31141b1c.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
c:I[56057,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","422","static/chunks/app/(post)/layout-dfa2e09a2a72ad66.js"],"YozoraThemeProvider"]
d:I[20593,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","422","static/chunks/app/(post)/layout-dfa2e09a2a72ad66.js"],"PostLayoutView"]
e:I[59627,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","595","static/chunks/595-60215c9a9c19277d.js","551","static/chunks/551-68df0022cc950ef8.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","918","static/chunks/app/(post)/post/%5B...slug%5D/page-80cd6d5787edd594.js"],"PostDetailPageView"]
6:["$","$Lc",null,{"children":["$","$Ld",null,{"data":{"postItems":[{"title":"Javascript 踩坑记——继承和原型链","slug":"/post/web/javascript/inherit","tags":["studynote","javascript","ecmascript"],"createdAt":"Sep 05, 2021"},{"title":"防抖和节流","slug":"/post/algorithm/debounce-and-throttle","tags":["coding","debounce","throttle"],"createdAt":"Sep 03, 2021"},{"title":"XSS 与 CSRF 的攻防","slug":"/post/web/security/xss-csrf","tags":["web","web security","csrf"],"createdAt":"Aug 19, 2021"},{"title":"自然对数底数 e","slug":"/post/math/calculus/自然对数底数e","tags":["math","函数","极限","自然对数"],"createdAt":"Aug 07, 2021"},{"title":"当你想来一把数独","slug":"/post/game/sudoku","tags":["game","sudoku"],"createdAt":"Aug 01, 2021"},{"title":"精确覆盖问题和 DLX 算法","slug":"/post/algorithm/dlx","tags":["算法","精确覆盖","DLX 算法"],"createdAt":"Jul 24, 2021"},{"title":"洗牌问题和 knuth-shuffle 算法","slug":"/post/algorithm/shuffle","tags":["shuffle","knuth-shuffle","约瑟夫环"],"createdAt":"Jul 22, 2021"},{"title":"统计区间内的线段","slug":"/post/quiz/scanning-line/segments","tags":["quiz","扫描线","前缀和","树状数组","线段树"],"createdAt":"Jul 21, 2021"},{"title":"约瑟夫环问题","slug":"/post/quiz/classical/Josephus-ring","tags":["quiz","经典问题","约瑟夫环"],"createdAt":"Jul 16, 2021"},{"title":"剑指offer 解题报告","slug":"/post/acm/oj/nowcoder/jz-offer","tags":["专题训练","解题报告"],"createdAt":"Jul 15, 2021"},{"title":"不修改数组找出重复的数字","slug":"/post/quiz/partition/find-duplicate-number","tags":["quiz","分治","追击"],"createdAt":"Jun 29, 2021"},{"title":"背包九讲","slug":"/post/algorithm/knapsack","tags":["acm","算法","动态规划","背包问题"],"createdAt":"Jun 27, 2021"},{"title":"React Reconciliation","slug":"/post/web/react/reconciliation","tags":["react","react reconciliation"],"createdAt":"Jun 26, 2021"},{"title":"扔鸡蛋问题","slug":"/post/quiz/dp/egg-drop","tags":["quiz","动态规划"],"createdAt":"Jun 20, 2021"},{"title":"端口管理","slug":"/post/network/端口管理","tags":["network","port","ssh","netstat"],"createdAt":"Jun 20, 2021"},{"title":"最长公共子序列（LCS）","slug":"/post/algorithm/lcs","tags":["最长公共子序列","LCS"],"createdAt":"Jun 02, 2021"},{"title":"最长上升子序列（LIS）","slug":"/post/algorithm/lis","tags":["最长上升子序列","LIS"],"createdAt":"Jun 02, 2021"},{"title":"Dijkstra 算法","slug":"/post/algorithm/graph/shortest-path/dijkstra","tags":["算法","最短路","单源最短路","dijkstra"],"createdAt":"May 29, 2021"},{"title":"函数的极限","slug":"/post/math/calculus/函数的极限","tags":["math","函数","极限"],"createdAt":"May 09, 2021"},{"title":"ECMA 2020 新特性","slug":"/post/web/javascript/2020","tags":["javascript","ecmascript"],"createdAt":"Apr 05, 2021"},{"title":"ECMA 2021 新特性","slug":"/post/web/javascript/2021","tags":["javascript","ecmascript"],"createdAt":"Apr 05, 2021"},{"title":"在 excel 中启用正则表达式","slug":"/post/tool/excel/regex","tags":["excel","tools"],"createdAt":"Mar 29, 2021"},{"title":"CSS 选择器","slug":"/post/web/css/selector","tags":["web","frontend","css"],"createdAt":"Nov 02, 2020"},{"title":"Custom React Hooks","slug":"/post/web/react/hooks/custom","tags":["react","react hooks"],"createdAt":"Oct 29, 2020"},{"title":"组合游戏基础之 SG 函数和 SG 定理","slug":"/post/math/combinatorial/SG","tags":["组合数学","组合游戏","SG 定理"],"createdAt":"Sep 04, 2016"},{"title":"网络流 24 题","slug":"/post/algorithm/graph/network-flow/24-problems","tags":["acm","算法","图论","网络流","二分图","解题报告","专题训练"],"createdAt":"Jul 30, 2016"},{"title":"网络流基础之最大权闭合图","slug":"/post/algorithm/graph/network-flow/最大权闭合图","tags":["算法","图论","网络流","最大权闭合图"],"createdAt":"Jul 24, 2016"},{"title":"2016 多校第 2 场","slug":"/post/acm/contest/multi-university-training/2016/2","tags":["acm","训练赛","数据结构","解题报告"],"createdAt":"Jul 22, 2016"},{"title":"二分图","slug":"/post/algorithm/graph/bipartite-graph","tags":["算法","图论","二分图","学习笔记"],"createdAt":"Jul 17, 2016"},{"title":"伸展树专题","slug":"/post/data-structure/bbst/splay","tags":["acm","Splay","解题报告","专题训练"],"createdAt":"Jul 03, 2016"},{"title":"CCF 2015-09 最佳文章 解题报告","slug":"/post/acm/oj/ccf/2015/09/E","tags":["acm","Aho-Corasick 自动机","矩阵快速幂","动态规划","解题报告"],"createdAt":"Jun 26, 2016"},{"title":"编译原理-语法制导翻译实现计算器","slug":"/post/fundamentals-of-compiling/exercise","tags":["编译原理","语法制导翻译","计算机"],"createdAt":"Jun 23, 2016"},{"title":"编译原理-语法分析","slug":"/post/fundamentals-of-compiling/grammar","tags":["编译原理","语法分析","计算机"],"createdAt":"Jun 18, 2016"},{"title":"百度之星 2016 解题报告","slug":"/post/acm/contest/baiduzhixing/2016","tags":["acm","递推","状态压缩","动态规划","字典树","解题报告"],"createdAt":"Jun 03, 2016"},{"title":"数论基础之原根","slug":"/post/math/number-theory/原根","tags":["math","数论","原根"],"createdAt":"May 16, 2016"},{"title":"数论基础之欧拉函数","slug":"/post/math/number-theory/欧拉函数","tags":["math","数论","既约剩余系","欧拉函数"],"createdAt":"May 10, 2016"},{"title":"数论基础之筛法","slug":"/post/math/number-theory/sieve","tags":["math","数论","素数","欧拉函数","线性筛"],"createdAt":"May 06, 2016"},{"title":"数论基础之模方程初步","slug":"/post/math/number-theory/模方程/basic","tags":["math","数论","扩展欧几里得算法","中国剩余定理","Baby Step Gaint Step"],"createdAt":"May 04, 2016"},{"title":"HDU-5576 Expection of String 解题报告（原 2015-上海区域赛-E)","slug":"/post/acm/oj/hdu/5576","tags":["acm","动态规划","解题报告"],"createdAt":"Apr 24, 2016"},{"title":"树链剖分","slug":"/post/algorithm/tree/tcs","tags":["acm","算法","树链剖分"],"createdAt":"Apr 23, 2016"},{"title":"51nod-1462 数据结构 -- 解题报告","slug":"/post/acm/oj/51nod/1462","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"createdAt":"Apr 23, 2016"},{"title":"小球放盒模型","slug":"/post/math/combinatorial/小球放盒模型","tags":["math","组合数学"],"createdAt":"Apr 22, 2016"},{"title":"最长回文子串 Manacher 算法","slug":"/post/algorithm/string/manacher","tags":["算法","字符串","回文串","manacher"],"createdAt":"Apr 18, 2016"},{"title":"POJ-1324 Holedox Moving 解题报告","slug":"/post/acm/oj/poj/1324","tags":["acm","bfs","图论","状态压缩","解题报告"],"createdAt":"Apr 13, 2016"},{"title":"HDU-5574 Colorful Tree 解题报告（原 2015-上海区域赛-C）","slug":"/post/acm/oj/hdu/5574","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"createdAt":"Apr 12, 2016"},{"title":"快速傅里叶变换和雷德算法","slug":"/post/math/number-theory/fft","tags":["acm","大数乘法","fft","快速傅里叶变换"],"createdAt":"Apr 10, 2016"},{"title":"HDU-5306 Gorgeous Sequence 解题报告","slug":"/post/acm/oj/hdu/5306","tags":["acm","数据结构","线段树","解题报告"],"createdAt":"Apr 09, 2016"}]},"storageKey":"@kyokuya/react-layout-post/#page","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]
f:["quiz","扫描线","前缀和","树状数组","线段树"]
2:["$","$Le",null,{"data":{"title":"统计区间内的线段","titleAst":{"type":"paragraph","children":[{"type":"text","value":"统计区间内的线段"}]},"slug":"/post/quiz/scanning-line/segments","createdAt":"Jul 21, 2021","updatedAt":"Nov 03, 2021","timeToRead":"10min 24s","tags":"$f","categories":[],"ast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"一维区间"}],"identifier":"heading-一维区间"},{"type":"heading","depth":3,"children":[{"type":"text","value":"问题简述"}],"identifier":"heading-问题简述"},{"type":"paragraph","children":[{"type":"text","value":"坐标轴上存在 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 条线段，有 "},{"type":"inlineMath","value":"Q"},{"type":"text","value":" 次查询，每次查询询问与给定区间 "},{"type":"inlineMath","value":"[a_q, b_q]"},{"type":"text","value":" 相交的线段数量。（相交指存在重叠的区域，包括"},{"type":"strong","children":[{"type":"text","value":"相互包含"}]},{"type":"text","value":"的情况）"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"问题简析"}],"identifier":"heading-问题简析"},{"type":"paragraph","children":[{"type":"text","value":"先对线段进行排序：左端点小的排在前面，左端点相同时，右端点小的排在前面。"}]},{"type":"paragraph","children":[{"type":"text","value":"记 "},{"type":"inlineMath","value":"f(x)"},{"type":"text","value":" 为左端点在点 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 上的线段条数，"},{"type":"inlineMath","value":"g(x)"},{"type":"text","value":" 为右端点在 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 上的线段条数。计算 "},{"type":"inlineMath","value":"f(x)"},{"type":"text","value":" 和 "},{"type":"inlineMath","value":"g(x)"},{"type":"text","value":" 可以通过扫描排好序的线段，不妨记当前扫描到的线段为 "},{"type":"inlineMath","value":"[x1, x2]"},{"type":"text","value":"，并执行下述操作："}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"inlineMath","value":"f(x1) = f(x1) + 1"}]},{"type":"listItem","children":[{"type":"inlineMath","value":"g(x2) = g(x2) + 1"}]}]},{"type":"paragraph","children":[{"type":"text","value":"在扫描的过程中，不难有："}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"区间左侧 "},{"type":"inlineMath","value":"[-\\infty, a_q-1]"},{"type":"text","value":" 与当前区间不相交的数量为线段右端点个数，即\n"},{"type":"inlineMath","value":"\\displaystyle \\sum_{x=-\\infty}^{a_q - 1} f(x)"},{"type":"text","value":"；"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"区间右侧 "},{"type":"inlineMath","value":"[b_q + 1, +\\infty]"},{"type":"text","value":" 与当前区间不相交的数量为线段左端点个数，即\n"},{"type":"inlineMath","value":"\\displaystyle \\sum_{x=b_q + 1}^{+\\infty} g(x)"},{"type":"text","value":"；"}]}]}]},{"type":"paragraph","children":[{"type":"text","value":"由容斥定理可知，与区间 "},{"type":"inlineMath","value":"[a_q, b_q]"},{"type":"text","value":" 相交的线段数为"}]},{"type":"math","value":"N - \\left ( \\sum_{x=-\\infty}^{a_q - 1} f(x) + \\sum_{x=b_q + 1}^{+\\infty} g(x)\\right )\n"},{"type":"heading","depth":3,"children":[{"type":"text","value":"小结"}],"identifier":"heading-小结"},{"type":"paragraph","children":[{"type":"text","value":"对区间进行排序（或标号），再维护两个前缀和就可以了。"}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"时间复杂度： "},{"type":"inlineMath","value":"O(N \\log N + N)"}]},{"type":"listItem","children":[{"type":"text","value":"空间复杂度： "},{"type":"inlineMath","value":"O(N)"}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"二维区间（离线查询）"}],"identifier":"heading-二维区间-离线查询"},{"type":"heading","depth":3,"children":[{"type":"text","value":"问题描述"}],"identifier":"heading-问题描述"},{"type":"paragraph","children":[{"type":"text","value":"二维坐标系中存在 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 条与坐标轴垂直或平行的线段；有 "},{"type":"inlineMath","value":"Q"},{"type":"text","value":" 次查询，每次查询询问与给定矩形窗口 "},{"type":"inlineMath","value":"W_q = \\big\\lbrace A_q(x1_q, y1_q), B_q(x2_q, y2_q) \\big\\rbrace"},{"type":"text","value":" 相交的线段数量。其中，矩形窗口的边与坐标轴平行或垂直，且 "},{"type":"inlineMath","value":"A_q"},{"type":"text","value":" 为矩形的左下角顶点，\n"},{"type":"inlineMath","value":"B_q"},{"type":"text","value":" 为矩形的右上角对顶点。（相交指存在重叠的区域，包括"},{"type":"strong","children":[{"type":"text","value":"相互包含"}]},{"type":"text","value":"的情况）"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"问题简析"}],"identifier":"heading-问题简析-2"},{"type":"paragraph","children":[{"type":"text","value":"先仅考虑与 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴平行的线段与 "},{"type":"inlineMath","value":"W_q"},{"type":"text","value":" 相交情况。假设与 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴平行的线段有 "},{"type":"inlineMath","value":"N_y"},{"type":"text","value":" 条。记："}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"inlineMath","value":"f(y)"},{"type":"text","value":" 为上端点在点 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 上的线段条数；"}]},{"type":"listItem","children":[{"type":"inlineMath","value":"g(y)"},{"type":"text","value":" 为下端点在 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 上的线段条数，初始时 "},{"type":"inlineMath","value":"f(y)=g(y)=0"},{"type":"text","value":"；"}]},{"type":"listItem","children":[{"type":"inlineMath","value":"h1(q)"},{"type":"text","value":" 表示窗口 "},{"type":"inlineMath","value":"q"},{"type":"text","value":" 的左边界之左（不包括左边界）与区间 "},{"type":"inlineMath","value":"[y1_q,y2_q]"},{"type":"text","value":" 相交的线段数，"}]},{"type":"listItem","children":[{"type":"inlineMath","value":"h2(q)"},{"type":"text","value":" 表示窗口 "},{"type":"inlineMath","value":"q"},{"type":"text","value":" 的右边界之左（包括右边界）与区间 "},{"type":"inlineMath","value":"[y1_q,y2_q]"},{"type":"text","value":" 相交的线段数；"}]}]},{"type":"paragraph","children":[{"type":"text","value":"不难发现 "},{"type":"inlineMath","value":"h2(q) - h1(q)"},{"type":"text","value":" 即为与 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴平行的线段中与 "},{"type":"inlineMath","value":"W_q"},{"type":"text","value":" 相交的数量。"}]},{"type":"paragraph","children":[{"type":"text","value":"将所有的窗口按照左边界 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 坐标从小到大排序，并维护一个单调队列 "},{"type":"inlineMath","value":"S"},{"type":"text","value":"；遍历排好序的窗口 "},{"type":"inlineMath","value":"W_i = \\big\\lbrace A_i(x1_i, y1_i), B_i(x2_i, y2_i) \\big\\rbrace"},{"type":"text","value":"。"}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"若 "},{"type":"inlineMath","value":"S"},{"type":"text","value":" 中存在窗口（必在队首） "},{"type":"inlineMath","value":"W_k = \\big\\lbrace A_k(x1_k, y1_k), B_k(x2_k, y2_k) \\big\\rbrace"},{"type":"text","value":"\n满足 "},{"type":"inlineMath","value":"x2_k < x1_i"},{"type":"text","value":"，执行下述操作，直到队列中没有这样的 "},{"type":"inlineMath","value":"W_k"},{"type":"text","value":"："}]},{"type":"list","ordered":false,"marker":45,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"取出队首元素 "},{"type":"inlineMath","value":"W_k"},{"type":"text","value":"；"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"等待所有未操作过的且 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 坐标小于等于 "},{"type":"inlineMath","value":"x2_k"},{"type":"text","value":" 的线段计入到 "},{"type":"inlineMath","value":"f, g"},{"type":"text","value":" 中；"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"计算此时 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 坐标在 "},{"type":"inlineMath","value":"x2_k"},{"type":"text","value":" 左侧的线段中，与区间 "},{"type":"inlineMath","value":"[y1_k, y2_k]"},{"type":"text","value":" 相交的垂直线段条数："}]},{"type":"math","value":"h_2(k) = N_y - \\left( \\sum_{y=-\\infty}^{y1_k - 1} f(y) + \\sum_{y=y2_k + 1}^{+\\infty} g(x) \\right)\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"则此时 "},{"type":"inlineMath","value":"h_2(k) - h_1(k)"},{"type":"text","value":" 即为与 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴平行的线段中与 "},{"type":"inlineMath","value":"W_k"},{"type":"text","value":" 相交的数量。"}]}]}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"将 "},{"type":"inlineMath","value":"W_i"},{"type":"text","value":" 丢进 "},{"type":"inlineMath","value":"S"},{"type":"text","value":" 队尾，并执行下述操作："}]},{"type":"list","ordered":false,"marker":45,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"等待所有未操作过的且 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 坐标小于 "},{"type":"inlineMath","value":"x1_i"},{"type":"text","value":" 的线段计入到 "},{"type":"inlineMath","value":"f, g"},{"type":"text","value":" 中；"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"计算此时 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 坐标在 "},{"type":"inlineMath","value":"x1_i"},{"type":"text","value":" 左侧的线段中，与区间 "},{"type":"inlineMath","value":"[y1_i, y2_i]"},{"type":"text","value":" 相交的垂直线段条数："}]},{"type":"math","value":"h_1(i) = N_y - \\left( \\sum_{y=-\\infty}^{y1_i - 1} f(y) + \\sum_{y=y2_i + 1}^{+\\infty} g(x) \\right)\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"继续遍历排好序的窗口 "},{"type":"inlineMath","value":"W_i"},{"type":"text","value":"；"}]}]}]}]}]},{"type":"paragraph","children":[{"type":"text","value":"类似地，可得到与窗口 "},{"type":"inlineMath","value":"i"},{"type":"text","value":" 相交的水平线段的数量，做一次相加即可得到答案。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"小结"}],"identifier":"heading-小结-2"},{"type":"paragraph","children":[{"type":"text","value":"以统计窗口与平行于 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴方向上的线段相交的数量为例，算法的思路是将当前需要考虑的线段限定在目标边界以左，则此时问题归约为垂直方向上统计某个区间内的线段数量，而这个区间内的线段有可能在目标窗口的左边界以左，但只使用一种类似前缀和的思想（参见前文中关于 "},{"type":"inlineMath","value":"h_1"},{"type":"text","value":" 和 "},{"type":"inlineMath","value":"h_2"},{"type":"text","value":" 的定义）将这部分线段再减去即可。"}]},{"type":"paragraph","children":[{"type":"text","value":"和一维问题的区别在于多了一个动态计入 "},{"type":"inlineMath","value":"f,g"},{"type":"text","value":" 的步骤，因此可归约到【单点更新，区间求和】问题，维护一棵线段树或树状数组即可。"}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"时间复杂度： "},{"type":"inlineMath","value":"O(N \\log N)"}]},{"type":"listItem","children":[{"type":"text","value":"空间复杂度： "},{"type":"inlineMath","value":"O(N)"}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"二维区间（在线查询）"}],"identifier":"heading-二维区间-在线查询"},{"type":"paragraph","children":[{"type":"text","value":"和上一个问题类似，不同的是，每次查询需要立刻给出答案，即我们无法再对窗口进行排序了。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"问题简析"}],"identifier":"heading-问题简析-3"},{"type":"paragraph","children":[{"type":"text","value":"在离线查询的算法中，因为将查询窗口进行排序，所以每次计算窗口的左右边界时，天然地保证了当前考虑过的线段全在边界以左。如果我们增加一个额外的维度维护 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 轴的信息，即能够快速地查询在某个 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 轴左侧的线段的分布情况，则可解决本问题。"}]},{"type":"paragraph","children":[{"type":"text","value":"不难想到可以建立一棵主席树（可持久化线段树），每个版本为只包含某个特定的 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 轴以左的线段下 "},{"type":"inlineMath","value":"f"},{"type":"text","value":" 和 "},{"type":"inlineMath","value":"g"},{"type":"text","value":" 的值，则查询时可以先查询到版本，然后再查询垂直方向上的线段相交情况。此外再建立线段树时，仅需考虑所有与 "},{"type":"inlineMath","value":"y"},{"type":"text","value":" 轴平行的线段的 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 值即可，之后给定了窗口后，可通过二分确定主席树中的版本号。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"小结"}],"identifier":"heading-小结-3"},{"type":"paragraph","children":[{"type":"text","value":"和离线查询的版本相比，把线段树换成了主席树，因此无论时间复杂度还是空间复杂度都需要再乘一个 "},{"type":"inlineMath","value":"\\log N"},{"type":"text","value":"。此外，因为确定窗口边界所对应的主席树所对应的版本号需要进行一次二分，因此时间复杂度还需要再乘一个 "},{"type":"inlineMath","value":"\\log N"}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"时间复杂度： "},{"type":"inlineMath","value":"O(N \\log^3 N)"}]},{"type":"listItem","children":[{"type":"text","value":"空间复杂度： "},{"type":"inlineMath","value":"O(N \\log N)"}]}]}]},"toc":{"children":[{"depth":2,"identifier":"heading-一维区间","contents":[{"type":"text","value":"一维区间"}],"children":[{"depth":3,"identifier":"heading-问题简述","contents":[{"type":"text","value":"问题简述"}],"children":[]},{"depth":3,"identifier":"heading-问题简析","contents":[{"type":"text","value":"问题简析"}],"children":[]},{"depth":3,"identifier":"heading-小结","contents":[{"type":"text","value":"小结"}],"children":[]}]},{"depth":2,"identifier":"heading-二维区间-离线查询","contents":[{"type":"text","value":"二维区间（离线查询）"}],"children":[{"depth":3,"identifier":"heading-问题描述","contents":[{"type":"text","value":"问题描述"}],"children":[]},{"depth":3,"identifier":"heading-问题简析-2","contents":[{"type":"text","value":"问题简析"}],"children":[]},{"depth":3,"identifier":"heading-小结-2","contents":[{"type":"text","value":"小结"}],"children":[]}]},{"depth":2,"identifier":"heading-二维区间-在线查询","contents":[{"type":"text","value":"二维区间（在线查询）"}],"children":[{"depth":3,"identifier":"heading-问题简析-3","contents":[{"type":"text","value":"问题简析"}],"children":[]},{"depth":3,"identifier":"heading-小结-3","contents":[{"type":"text","value":"小结"}],"children":[]}]}]},"ecmaImports":[],"definitionMap":{},"footnoteDefinitionMap":{},"images":[],"paginationUrl":"/posts/2","prev":{"title":"约瑟夫环问题","slug":"/post/quiz/classical/Josephus-ring"},"next":{"title":"洗牌问题和 knuth-shuffle 算法","slug":"/post/algorithm/shuffle"},"aplayerOptions":null}}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"统计区间内的线段 | guanghechen"}],["$","meta","3",{"name":"description","content":"统计区间内的线段"}],["$","meta","4",{"name":"application-name","content":"guanghechen"}],["$","link","5",{"rel":"author","href":"https://github.com/guanghechen"}],["$","meta","6",{"name":"author","content":"光和尘"}],["$","link","7",{"rel":"icon","href":"/favicon.png"}],["$","meta","8",{"name":"next-size-adjust"}]]
1:null
