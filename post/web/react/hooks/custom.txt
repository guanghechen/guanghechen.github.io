3:I[5613,[],""]
5:I[31778,[],""]
7:I[79286,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],"SiteProvider"]
8:I[54110,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],""]
9:I[74117,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-c863019bb2b3aef0.js"],"MaterialThemeProvider"]
a:I[55153,["74","static/chunks/74-31f764c22632bceb.js","800","static/chunks/800-4848173b49d8d689.js","160","static/chunks/app/not-found-79f3557760569a3b.js"],"NotFoundView"]
4:["slug","web/react/hooks/custom","c"]
0:["eyS7yEHAsi6_ceCdSwHos",[[["",{"children":["(post)",{"children":["post",{"children":[["slug","web/react/hooks/custom","c"],{"children":["__PAGE__?{\"slug\":[\"web\",\"react\",\"hooks\",\"custom\"]}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(post)",{"children":["post",{"children":[["slug","web/react/hooks/custom","c"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children","post","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children","post","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L6",null]]},[null,["$","html",null,{"lang":"en","className":"__className_324942","children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"utf8"}],["$","meta","viewport",{"name":"viewport","content":"initial-scale=1.0, width=device-width"}],["$","meta",null,{"name":"application-name","content":"guanghechen"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"光和尘"}],["$","meta",null,{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta",null,{"name":"description","content":"Guanghechen's personal site"}],["$","meta",null,{"name":"format-detection","content":"telephone=no"}],["$","meta",null,{"name":"mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"msapplication-config","content":"/icons/browserconfig.xml"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#2B5797"}],["$","meta",null,{"name":"msapplication-tap-highlight","content":"no"}],["$","meta",null,{"name":"theme-color","content":"#a2466c"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"property":"og:title","content":"光和尘"}],["$","meta",null,{"property":"og:description","content":"光和尘的个人站点"}],["$","meta",null,{"property":"og:site_name","content":"guanghechen"}],["$","meta",null,{"property":"og:url","content":"https://preview.me.guanghechen.com"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.png"}]]}],["$","body",null,{"children":["$","$L7",null,{"children":["$","$L8",null,{"children":["$","$L9",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$La",null,{}],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2159a4b672631e08.css","precedence":"next","crossOrigin":""}]]}]}]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f2ccec9f31141b1c.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
c:I[56057,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","422","static/chunks/app/(post)/layout-dfa2e09a2a72ad66.js"],"YozoraThemeProvider"]
d:I[20593,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","422","static/chunks/app/(post)/layout-dfa2e09a2a72ad66.js"],"PostLayoutView"]
e:I[59627,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","595","static/chunks/595-60215c9a9c19277d.js","551","static/chunks/551-68df0022cc950ef8.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","918","static/chunks/app/(post)/post/%5B...slug%5D/page-80cd6d5787edd594.js"],"PostDetailPageView"]
6:["$","$Lc",null,{"children":["$","$Ld",null,{"data":{"postItems":[{"title":"Javascript 踩坑记——继承和原型链","slug":"/post/web/javascript/inherit","tags":["studynote","javascript","ecmascript"],"createdAt":"Sep 05, 2021"},{"title":"防抖和节流","slug":"/post/algorithm/debounce-and-throttle","tags":["coding","debounce","throttle"],"createdAt":"Sep 03, 2021"},{"title":"XSS 与 CSRF 的攻防","slug":"/post/web/security/xss-csrf","tags":["web","web security","csrf"],"createdAt":"Aug 19, 2021"},{"title":"自然对数底数 e","slug":"/post/math/calculus/自然对数底数e","tags":["math","函数","极限","自然对数"],"createdAt":"Aug 07, 2021"},{"title":"当你想来一把数独","slug":"/post/game/sudoku","tags":["game","sudoku"],"createdAt":"Aug 01, 2021"},{"title":"精确覆盖问题和 DLX 算法","slug":"/post/algorithm/dlx","tags":["算法","精确覆盖","DLX 算法"],"createdAt":"Jul 24, 2021"},{"title":"洗牌问题和 knuth-shuffle 算法","slug":"/post/algorithm/shuffle","tags":["shuffle","knuth-shuffle","约瑟夫环"],"createdAt":"Jul 22, 2021"},{"title":"统计区间内的线段","slug":"/post/quiz/scanning-line/segments","tags":["quiz","扫描线","前缀和","树状数组","线段树"],"createdAt":"Jul 21, 2021"},{"title":"约瑟夫环问题","slug":"/post/quiz/classical/Josephus-ring","tags":["quiz","经典问题","约瑟夫环"],"createdAt":"Jul 16, 2021"},{"title":"剑指offer 解题报告","slug":"/post/acm/oj/nowcoder/jz-offer","tags":["专题训练","解题报告"],"createdAt":"Jul 15, 2021"},{"title":"不修改数组找出重复的数字","slug":"/post/quiz/partition/find-duplicate-number","tags":["quiz","分治","追击"],"createdAt":"Jun 29, 2021"},{"title":"背包九讲","slug":"/post/algorithm/knapsack","tags":["acm","算法","动态规划","背包问题"],"createdAt":"Jun 27, 2021"},{"title":"React Reconciliation","slug":"/post/web/react/reconciliation","tags":["react","react reconciliation"],"createdAt":"Jun 26, 2021"},{"title":"扔鸡蛋问题","slug":"/post/quiz/dp/egg-drop","tags":["quiz","动态规划"],"createdAt":"Jun 20, 2021"},{"title":"端口管理","slug":"/post/network/端口管理","tags":["network","port","ssh","netstat"],"createdAt":"Jun 20, 2021"},{"title":"最长公共子序列（LCS）","slug":"/post/algorithm/lcs","tags":["最长公共子序列","LCS"],"createdAt":"Jun 02, 2021"},{"title":"最长上升子序列（LIS）","slug":"/post/algorithm/lis","tags":["最长上升子序列","LIS"],"createdAt":"Jun 02, 2021"},{"title":"Dijkstra 算法","slug":"/post/algorithm/graph/shortest-path/dijkstra","tags":["算法","最短路","单源最短路","dijkstra"],"createdAt":"May 29, 2021"},{"title":"函数的极限","slug":"/post/math/calculus/函数的极限","tags":["math","函数","极限"],"createdAt":"May 09, 2021"},{"title":"ECMA 2020 新特性","slug":"/post/web/javascript/2020","tags":["javascript","ecmascript"],"createdAt":"Apr 05, 2021"},{"title":"ECMA 2021 新特性","slug":"/post/web/javascript/2021","tags":["javascript","ecmascript"],"createdAt":"Apr 05, 2021"},{"title":"在 excel 中启用正则表达式","slug":"/post/tool/excel/regex","tags":["excel","tools"],"createdAt":"Mar 29, 2021"},{"title":"CSS 选择器","slug":"/post/web/css/selector","tags":["web","frontend","css"],"createdAt":"Nov 02, 2020"},{"title":"Custom React Hooks","slug":"/post/web/react/hooks/custom","tags":["react","react hooks"],"createdAt":"Oct 29, 2020"},{"title":"组合游戏基础之 SG 函数和 SG 定理","slug":"/post/math/combinatorial/SG","tags":["组合数学","组合游戏","SG 定理"],"createdAt":"Sep 04, 2016"},{"title":"网络流 24 题","slug":"/post/algorithm/graph/network-flow/24-problems","tags":["acm","算法","图论","网络流","二分图","解题报告","专题训练"],"createdAt":"Jul 30, 2016"},{"title":"网络流基础之最大权闭合图","slug":"/post/algorithm/graph/network-flow/最大权闭合图","tags":["算法","图论","网络流","最大权闭合图"],"createdAt":"Jul 24, 2016"},{"title":"2016 多校第 2 场","slug":"/post/acm/contest/multi-university-training/2016/2","tags":["acm","训练赛","数据结构","解题报告"],"createdAt":"Jul 22, 2016"},{"title":"二分图","slug":"/post/algorithm/graph/bipartite-graph","tags":["算法","图论","二分图","学习笔记"],"createdAt":"Jul 17, 2016"},{"title":"伸展树专题","slug":"/post/data-structure/bbst/splay","tags":["acm","Splay","解题报告","专题训练"],"createdAt":"Jul 03, 2016"},{"title":"CCF 2015-09 最佳文章 解题报告","slug":"/post/acm/oj/ccf/2015/09/E","tags":["acm","Aho-Corasick 自动机","矩阵快速幂","动态规划","解题报告"],"createdAt":"Jun 26, 2016"},{"title":"编译原理-语法制导翻译实现计算器","slug":"/post/fundamentals-of-compiling/exercise","tags":["编译原理","语法制导翻译","计算机"],"createdAt":"Jun 23, 2016"},{"title":"编译原理-语法分析","slug":"/post/fundamentals-of-compiling/grammar","tags":["编译原理","语法分析","计算机"],"createdAt":"Jun 18, 2016"},{"title":"百度之星 2016 解题报告","slug":"/post/acm/contest/baiduzhixing/2016","tags":["acm","递推","状态压缩","动态规划","字典树","解题报告"],"createdAt":"Jun 03, 2016"},{"title":"数论基础之原根","slug":"/post/math/number-theory/原根","tags":["math","数论","原根"],"createdAt":"May 16, 2016"},{"title":"数论基础之欧拉函数","slug":"/post/math/number-theory/欧拉函数","tags":["math","数论","既约剩余系","欧拉函数"],"createdAt":"May 10, 2016"},{"title":"数论基础之筛法","slug":"/post/math/number-theory/sieve","tags":["math","数论","素数","欧拉函数","线性筛"],"createdAt":"May 06, 2016"},{"title":"数论基础之模方程初步","slug":"/post/math/number-theory/模方程/basic","tags":["math","数论","扩展欧几里得算法","中国剩余定理","Baby Step Gaint Step"],"createdAt":"May 04, 2016"},{"title":"HDU-5576 Expection of String 解题报告（原 2015-上海区域赛-E)","slug":"/post/acm/oj/hdu/5576","tags":["acm","动态规划","解题报告"],"createdAt":"Apr 24, 2016"},{"title":"树链剖分","slug":"/post/algorithm/tree/tcs","tags":["acm","算法","树链剖分"],"createdAt":"Apr 23, 2016"},{"title":"51nod-1462 数据结构 -- 解题报告","slug":"/post/acm/oj/51nod/1462","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"createdAt":"Apr 23, 2016"},{"title":"小球放盒模型","slug":"/post/math/combinatorial/小球放盒模型","tags":["math","组合数学"],"createdAt":"Apr 22, 2016"},{"title":"最长回文子串 Manacher 算法","slug":"/post/algorithm/string/manacher","tags":["算法","字符串","回文串","manacher"],"createdAt":"Apr 18, 2016"},{"title":"POJ-1324 Holedox Moving 解题报告","slug":"/post/acm/oj/poj/1324","tags":["acm","bfs","图论","状态压缩","解题报告"],"createdAt":"Apr 13, 2016"},{"title":"HDU-5574 Colorful Tree 解题报告（原 2015-上海区域赛-C）","slug":"/post/acm/oj/hdu/5574","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"createdAt":"Apr 12, 2016"},{"title":"快速傅里叶变换和雷德算法","slug":"/post/math/number-theory/fft","tags":["acm","大数乘法","fft","快速傅里叶变换"],"createdAt":"Apr 10, 2016"},{"title":"HDU-5306 Gorgeous Sequence 解题报告","slug":"/post/acm/oj/hdu/5306","tags":["acm","数据结构","线段树","解题报告"],"createdAt":"Apr 09, 2016"}]},"storageKey":"@kyokuya/react-layout-post/#page","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(post)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]
f:["react","react hooks"]
10:T450,const Container = styled.div`
  padding: 1rem;

  div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: center;
    min-width: 8rem;

    button {
      flex: 0 0 auto;
      user-select: none;
    }

    span {
      flex: 1 1 3rem;
      color: #e37878;
    }
  }

  h2 {
    padding-top: 1rem;
    border-top: 1px solid #ccc;
    margin: 1rem auto 0;
    text-align: center;
  }
`

function usePreviousState(value, defaultValue) {
  const ref = React.useRef(defaultValue)

  React.useEffect(() => {
    ref.current = value
  }, [value])

  console.log('[usePreviousState] value: ', value, 'current:', ref.current)
  return ref.current
}

function Component() {
  const [count, setCount] = React.useState(0)
  const prevCount = usePreviousState(count, -1)

  return (
    <Container>
      <div>
        <button onClick={ () => setCount(c => c - 1) }>-</button>
        <span>{ count }</span>
        <button onClick={ () => setCount(c => c + 1) }>+</button>
      </div>
      <h2>before: {prevCount} </h2>
    </Container>
  )
}

render(<Component />)
2:["$","$Le",null,{"data":{"title":"Custom React Hooks","titleAst":{"type":"paragraph","children":[{"type":"text","value":"Custom React Hooks"}]},"slug":"/post/web/react/hooks/custom","createdAt":"Oct 29, 2020","updatedAt":"Jun 04, 2023","timeToRead":"00min 44s","tags":"$f","categories":[],"ast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareCallback"}],"identifier":"heading-usedeepcomparecallback"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useCallback"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareCallback.ts\" sourcefile=\"./useDeepCompareCallback.ts\" collapsed linenos","value":"import { isEqual } from '@guanghechen/equal'\nimport type React from 'react'\nimport { useCallback, useRef } from 'react'\n\n/**\n * Deep compare version of React.useCallback\n * @param fn\n * @param deps\n */\nexport function useDeepCompareCallback<T extends (...args: any[]) => any>(\n  fn: T,\n  deps: React.DependencyList,\n): T {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareEffect"}],"identifier":"heading-usedeepcompareeffect"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useEffect"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareEffect.ts\" sourcefile=\"./useDeepCompareEffect.ts\" collapsed linenos","value":"import { isEqual } from '@guanghechen/equal'\nimport type React from 'react'\nimport { useEffect, useRef } from 'react'\n\n/**\n * Deep compare version of React.useEffect\n * @param fn\n * @param deps\n */\nexport function useDeepCompareEffect(fn: React.EffectCallback, deps: React.DependencyList): void {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareMemo"}],"identifier":"heading-usedeepcomparememo"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useMemo"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareMemo.ts\" sourcefile=\"./useDeepCompareMemo.ts\" collapsed linenos","value":"import { isEqual } from '@guanghechen/equal'\nimport type React from 'react'\nimport { useMemo, useRef } from 'react'\n\n/**\n * Deep compare version of React.useMemo\n * @param fn\n * @param deps\n */\nexport function useDeepCompareMemo<T>(fn: () => T, deps: React.DependencyList): T {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useInterval"}],"identifier":"heading-useinterval"},{"type":"paragraph","children":[{"type":"text","value":"Execute callback interval in react function components."}]},{"type":"code","lang":"tsx","meta":"title=\"userInterval.ts\" sourcefile=\"./useInterval.ts\" collapsed linenos","value":"import { useEffect, useRef } from 'react'\n\ntype Callback = () => void\n\n/**\n * Execute callback interval in react function components.\n * @param callback\n * @param delay\n */\nexport function useInterval(callback: Callback, delay: number): void {\n  const callbackRef = useRef<Callback>(callback)\n\n  useEffect(() => {\n    callbackRef.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    const tick: Callback = () => {\n      if (callbackRef.current === undefined) return\n      callbackRef.current()\n    }\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"usePreviousState"}],"identifier":"heading-usepreviousstate"},{"type":"paragraph","children":[{"type":"text","value":"记录上一个状态。"}]},{"type":"paragraph","children":[{"type":"text","value":"利用更新 "},{"type":"inlineCode","value":"ref.current"},{"type":"text","value":" 的值不会触发组件更新的特性，在 "},{"type":"inlineCode","value":"usePreviousState"},{"type":"text","value":" 中总是返回旧的值，尽管在 "},{"type":"inlineCode","value":"userPreviousState"},{"type":"text","value":" 的 "},{"type":"inlineCode","value":"useEffect"},{"type":"text","value":" 中更新了新值，但并不触发更新。"}]},{"type":"code","lang":"tsx","meta":"title=\"usePreviousState.ts\" sourcefile=\"./usePreviousState.ts\" collapsed linenos","value":"import { useEffect, useRef } from 'react'\n\n/**\n * Use previous state.\n * @param value\n * @returns\n */\nexport function usePreviousState<T = unknown>(value: T): T {\n  const ref = useRef<T>(value)\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useReactiveRef"}],"identifier":"heading-usereactiveref"},{"type":"code","lang":"tsx","meta":"title=\"useReactiveRef.ts\" sourcefile=\"./useReactiveRef.ts\" collapsed linenos","value":"import type React from 'react'\nimport { useEffect, useRef } from 'react'\n\n/**\n * Create a reactive ref which will follow the changes of the given data.\n * @param data\n * @returns\n */\nexport function useReactiveRef<T>(data: T): React.MutableRefObject<T> {\n  const ref = useRef(data)\n  useEffect(() => {\n    ref.current = data\n  }, [data])\n  return ref\n}\n"},{"type":"html","value":"<!-- more -->\n"},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example"}],"identifier":"heading-example"},{"type":"code","lang":"jsx","meta":"live jsxmode=\"block\" title=\"demo/usePreviousState.jsx\" maxlines=\"15\" linenos","value":"$10"},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related"}],"identifier":"heading-related"},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"link","url":"https://overreacted.io/making-setinterval-declarative-with-react-hooks/","children":[{"type":"text","value":"Making setInterval Declarative with React Hooks"}]}]},{"type":"listItem","children":[{"type":"link","url":"https://github.com/guanghechen/node-scaffolds/tree/main/packages/react-hooks","children":[{"type":"text","value":"@guanghechen/react-hooks"}]}]}]}]},"toc":{"children":[{"depth":2,"identifier":"heading-usedeepcomparecallback","contents":[{"type":"text","value":"useDeepCompareCallback"}],"children":[]},{"depth":2,"identifier":"heading-usedeepcompareeffect","contents":[{"type":"text","value":"useDeepCompareEffect"}],"children":[]},{"depth":2,"identifier":"heading-usedeepcomparememo","contents":[{"type":"text","value":"useDeepCompareMemo"}],"children":[]},{"depth":2,"identifier":"heading-useinterval","contents":[{"type":"text","value":"useInterval"}],"children":[]},{"depth":2,"identifier":"heading-usepreviousstate","contents":[{"type":"text","value":"usePreviousState"}],"children":[]},{"depth":2,"identifier":"heading-usereactiveref","contents":[{"type":"text","value":"useReactiveRef"}],"children":[{"depth":3,"identifier":"heading-example","contents":[{"type":"text","value":"Example"}],"children":[]}]},{"depth":2,"identifier":"heading-related","contents":[{"type":"text","value":"Related"}],"children":[]}]},"ecmaImports":[],"definitionMap":{},"footnoteDefinitionMap":{},"images":[],"paginationUrl":"/posts/4","prev":{"title":"组合游戏基础之 SG 函数和 SG 定理","slug":"/post/math/combinatorial/SG"},"next":{"title":"CSS 选择器","slug":"/post/web/css/selector"},"aplayerOptions":null}}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Custom React Hooks | guanghechen"}],["$","meta","3",{"name":"description","content":"Custom React Hooks"}],["$","meta","4",{"name":"application-name","content":"guanghechen"}],["$","link","5",{"rel":"author","href":"https://github.com/guanghechen"}],["$","meta","6",{"name":"author","content":"光和尘"}],["$","link","7",{"rel":"icon","href":"/favicon.png"}],["$","meta","8",{"name":"next-size-adjust"}]]
1:null
