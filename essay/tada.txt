3:I[5613,[],""]
5:I[31778,[],""]
7:I[79286,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-fa17488f223d6ca7.js"],"SiteProvider"]
8:I[54110,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-fa17488f223d6ca7.js"],""]
9:I[74117,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","800","static/chunks/800-4848173b49d8d689.js","185","static/chunks/app/layout-fa17488f223d6ca7.js"],"MaterialThemeProvider"]
a:I[55153,["74","static/chunks/74-31f764c22632bceb.js","800","static/chunks/800-4848173b49d8d689.js","160","static/chunks/app/not-found-7a4f60c8a23c275c.js"],"NotFoundView"]
4:["slug","tada","c"]
0:["QrHnf4rdYBDkyXQkdleFO",[[["",{"children":["(essay)",{"children":["essay",{"children":[["slug","tada","c"],{"children":["__PAGE__?{\"slug\":[\"tada\"]}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(essay)",{"children":["essay",{"children":[["slug","tada","c"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(essay)","children","essay","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(essay)","children","essay","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L6",null]]},[null,["$","html",null,{"lang":"en","className":"__className_324942","children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"utf8"}],["$","meta","viewport",{"name":"viewport","content":"initial-scale=1.0, width=device-width"}],["$","meta",null,{"name":"application-name","content":"guanghechen"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"光和尘"}],["$","meta",null,{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta",null,{"name":"description","content":"Guanghechen's personal site"}],["$","meta",null,{"name":"format-detection","content":"telephone=no"}],["$","meta",null,{"name":"mobile-web-app-capable","content":"yes"}],["$","meta",null,{"name":"msapplication-config","content":"/icons/browserconfig.xml"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#2B5797"}],["$","meta",null,{"name":"msapplication-tap-highlight","content":"no"}],["$","meta",null,{"name":"theme-color","content":"#a2466c"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"property":"og:title","content":"光和尘"}],["$","meta",null,{"property":"og:description","content":"光和尘的个人站点"}],["$","meta",null,{"property":"og:site_name","content":"guanghechen"}],["$","meta",null,{"property":"og:url","content":"https://me.guanghechen.com"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.png"}]]}],["$","body",null,{"children":["$","$L7",null,{"children":["$","$L8",null,{"children":["$","$L9",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$La",null,{}],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2159a4b672631e08.css","precedence":"next","crossOrigin":""}]]}]}]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f2ccec9f31141b1c.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
c:I[56057,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","63","static/chunks/app/(essay)/layout-5f49ece7d1bf5812.js"],"YozoraThemeProvider"]
d:I[20593,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","63","static/chunks/app/(essay)/layout-5f49ece7d1bf5812.js"],"PostLayoutView"]
e:I[59627,["74","static/chunks/74-31f764c22632bceb.js","32","static/chunks/32-c49bb5d7213019d7.js","4","static/chunks/4-1f47c029a7fba46f.js","810","static/chunks/810-8ebda3a4770496e8.js","659","static/chunks/659-7f246e0fb997ad2e.js","714","static/chunks/714-13c64a7806ea4ae0.js","595","static/chunks/595-60215c9a9c19277d.js","551","static/chunks/551-68df0022cc950ef8.js","800","static/chunks/800-4848173b49d8d689.js","448","static/chunks/448-62c186fb5283557d.js","575","static/chunks/app/(essay)/essay/%5B...slug%5D/page-a4370ccd369725ea.js"],"PostDetailPageView"]
6:["$","$Lc",null,{"children":["$","$Ld",null,{"data":{"postItems":[{"title":"✨光和尘一直想要一个清爽博客","slug":"/essay/tada","tags":["随笔","胡言乱语"],"createdAt":"Jul 18, 2021"}]},"storageKey":"@kyokuya/react-layout-essay/#page","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(essay)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]
f:["随笔","胡言乱语"]
2:["$","$Le",null,{"data":{"title":"✨光和尘一直想要一个清爽博客","titleAst":{"type":"paragraph","children":[{"type":"text","value":"✨光和尘一直想要一个清爽博客"}]},"slug":"/essay/tada","createdAt":"Jul 18, 2021","updatedAt":"Jun 04, 2023","timeToRead":"28min 48s","tags":"$f","categories":[],"ast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"起因"}],"identifier":"heading-起因"},{"type":"paragraph","children":[{"type":"text","value":"大约是刚上大二的时候吧，罗鸽推荐我去 logdown 写博客和解题报告，那是我头一回接触\nMarkdown，在此之前除了偶尔用 Tex 写写数学公式外都是用的 WYSIWYG 编辑器写文档。因为很少用到复杂的排版，而 logdown 也内置了 "},{"type":"linkReference","identifier":"mathjax","label":"mathjax","referenceType":"collapsed","children":[{"type":"text","value":"mathjax"}]},{"type":"text","value":"，满足我写文档的需求已经绰绰有余了，比 Tex 更简洁的语法让它一度成为了我写文档的首选方式。"}]},{"type":"paragraph","children":[{"type":"text","value":"那会儿 logdown 才建站不久，当时觉得界面还蛮好看的，只不过它的服务器应该挂在了外网，用校园网访问网速慢得有些难以忍受，于是过了不久便放弃它了。想到这里突然心血来潮地又跑去观摩了下，发现界面好像和 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 年前相比没太大差别，重置密码的服务好像都挂掉了。犹记得那时站长在讨论页积极地回复别人提的问题和建议的情形，还列出了一部分开发计划。那时一切都彷佛才刚刚开始，处处都是热闹的声音；“考古”有时也蛮心情复杂的。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"从 logdown 到 hexo"}],"identifier":"heading-从-logdown-到-hexo"},{"type":"paragraph","children":[{"type":"text","value":"又过了不久，基于 github 的静态页面托管服务的静态博客生成器火了起来，"},{"type":"linkReference","identifier":"hexo","label":"hexo","referenceType":"collapsed","children":[{"type":"text","value":"hexo"}]},{"type":"text","value":" 是其中的佼佼者。那个时候精力都放在了竞赛上，只会写写单文件的 "},{"type":"inlineCode","value":"C/C++"},{"type":"text","value":" 代码，对于工程实在是一窍不通，当听闻这个时下最火的静态博客生成器之一的作者居然是个高中生时，心里一时感佩不已。"}]},{"type":"paragraph","children":[{"type":"text","value":"在罗鸽的建议下选择了 "},{"type":"linkReference","identifier":"yilia","label":"yilia","referenceType":"collapsed","children":[{"type":"text","value":"yilia"}]},{"type":"text","value":" 这个主题，它应该可以算作 "},{"type":"linkReference","identifier":"hexo","label":"hexo","referenceType":"collapsed","children":[{"type":"text","value":"hexo"}]},{"type":"text","value":" 最时髦的几个主题之一了，饶是如此也仍有些地方感到不太满意，比如代码块不能折叠、复制，比如文章目录太丑陋等等（当然，瑕不掩瑜，后来 "},{"type":"linkReference","identifier":"yilia","label":"yilia","referenceType":"collapsed","children":[{"type":"text","value":"yilia"}]},{"type":"text","value":" 的作者重新设计了此主题，我现在的博客也几乎都照抄了它的样式）。那个时候实在是太菜了（虽然现在也是），所以拜托罗鸽帮忙做了一些修改和定制。搭建好博客后，开心得像刚得了一件有趣玩具的孩子，爱不释手地把玩它，结果很快就悲剧了。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"放弃 hexo"}],"identifier":"heading-放弃-hexo"},{"type":"paragraph","children":[{"type":"text","value":"那时 hexo 解析 Markdown 的做法是使用类似 "},{"type":"linkReference","identifier":"markdown-it","label":"markdown-it","referenceType":"collapsed","children":[{"type":"text","value":"markdown-it"}]},{"type":"text","value":" 的解析器兼渲染器将\nMarkdown 语法的字符串直接转成 HTML 字符串，而 "},{"type":"linkReference","identifier":"mathjax","label":"mathjax","referenceType":"collapsed","children":[{"type":"text","value":"mathjax"}]},{"type":"text","value":" 支持的是独立于 Markdown\n之外的 Tex 语法，它通常工作于解析完毕后的 HTML 字符串中；而由于 Markdown 支持将两个下划线解析成 Emphasis / Strong Emphasis 的语法，因而经常错误地破坏 Tex 语法中的下划线表达式。比如 "},{"type":"inlineMath","value":"x_1 + x_2"},{"type":"text","value":" 在 Tex 中写成 "},{"type":"inlineCode","value":"$$x_1 + x_2$"},{"type":"text","value":" 即可，而在那时 "},{"type":"linkReference","identifier":"hexo","label":"hexo","referenceType":"collapsed","children":[{"type":"text","value":"hexo"}]},{"type":"text","value":" 提供的 Markdown 解析渲染器 + "},{"type":"linkReference","identifier":"mathjax","label":"mathjax","referenceType":"collapsed","children":[{"type":"text","value":"mathjax"}]},{"type":"text","value":" 的组合下必须写成\n"},{"type":"inlineCode","value":"$$x\\_1 + x\\_2$"},{"type":"text","value":" 才能得到正确解析。花费了不少时间和精力都没能很好的解决这个问题，当时有一个做法（有道云笔记正是采用此方案）是将 "},{"type":"inlineMath","value":"x_1 + x_2"},{"type":"text","value":" 写成\n"},{"type":"inlineCode","value":"`$x_1 + x_2$`"},{"type":"text","value":"，这样就能避免 Markdown 的解析渲染器错误地解析下划线了；然而我讨厌这种麻烦的写法，何况只有一部分支持 Markdown 的平台或编辑器采用此做法，兼容性并不好。"}]},{"type":"paragraph","children":[{"type":"text","value":"除此之外，Markdown 规定了对于软换行要将换行符折叠成一个空格，这对于英文排版来说自然没问题，单词之间本来就需要用空格分隔；但应用到中文排版时就有些丑陋了，虽然不少编辑器都支持 Markdown 的“伪换行”，但这个方案仍然不够优雅。比如使用 vim 在内容间跳跃的效率降低了；又比如在使用 git 之类的版本管理工具时，短多行总比长单行更容易做对比。我还是偏爱手动换行以在源码中获得良好的排版视觉效果。"}]},{"type":"paragraph","children":[{"type":"text","value":"诸如此类的问题促使我萌生了要自己写一个 Markdown 解析器的念头。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"碎碎念"}],"identifier":"heading-碎碎念"},{"type":"paragraph","children":[{"type":"text","value":"说来惭愧，大学的时候因为"},{"type":"delete","children":[{"type":"text","value":"太懒了"}]},{"type":"text","value":"各种原因一直没有动手去做这件事，博客倒是很痛快地停了很久没去更新。大四的时候尝试了 "},{"type":"linkReference","identifier":"typescript","label":"typescript","referenceType":"full","children":[{"type":"text","value":"Typescript"}]},{"type":"text","value":"，未曾想从此便成了自己的主力开发语言，不过当时也只是用它写一些后来再没有派上用场的各类命令行小工具（想想好像折腾了不少乱七八糟的东西）。"}]},{"type":"paragraph","children":[{"type":"text","value":"毕业后，我来到了杭州从事后端开发，前半年老大让我兼着做一些数据开发的工作，工作量一下子就跑满了，直到2019年初任务才少了下来。期间学的东西也蛮杂，为了提升效率学习了不少命令行的东西，因为工作原因又补了不少后端和数据库的知识，而出于自身的兴趣也额外学了一些前端的东西（当时罗鸽还逼着我写一个 WYSIWYG 编辑器，可真是太为难我了）。因为学得东西零碎又杂，奈何记忆喂狗，所以记笔记的需求又变多了起来，这时也尝试了各种笔记平台。还是有各种不满意，此外还是想要将所有的内容（图片、文字、代码）都保存在本地，想要搭建一个清爽的个人博客的想法又日益强烈起来。"}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"开始造轮子"}],"identifier":"heading-开始造轮子"},{"type":"paragraph","children":[{"type":"text","value":"正式着手做这件事是在2019年4月，那时工作任务已经减轻了很多，正好有时间精力去考虑这件事。当时已经有较多的 "},{"type":"linkReference","identifier":"react","label":"react","referenceType":"full","children":[{"type":"text","value":"React"}]},{"type":"text","value":" 使用经验了，因此初始的想法便是将\nMarkdown 语法的字符串解析成 JSON 数据，然后再由 "},{"type":"linkReference","identifier":"react","label":"react","referenceType":"full","children":[{"type":"text","value":"React"}]},{"type":"text","value":" 完成渲染工作，即将整个工作分解成"},{"type":"emphasis","children":[{"type":"text","value":"解析阶段"}]},{"type":"text","value":"和"},{"type":"emphasis","children":[{"type":"text","value":"渲染阶段"}]},{"type":"text","value":"两部分，分别交由"},{"type":"strong","children":[{"type":"text","value":"解析器"}]},{"type":"text","value":"和"},{"type":"strong","children":[{"type":"text","value":"渲染器"}]},{"type":"text","value":"完成。后来也延续了此思路，只可惜当时太纠结于一些局部的数据语法，没能想到从各类数据类型进行划分从而制定一个上层的解析策略。大约折腾了两个多月，只积累下一些混乱、零散的代码，浅尝辄止后又搁置了一段时间。"}]},{"type":"paragraph","children":[{"type":"text","value":"2019年7月离开杭州转而去广州工作，新工作相当轻松，一下子腾出了很多时间和精力可以专注于自己的事情。这个期间出于工作的原因折腾了一阵其它各种工具，在开发它们的时候也是激情澎拜，觉得肯定能提升不少效率，结果无一例外都烂尾了，不过也积累了不少开发工具和库的经验。这个时候才真正下定决心要把 Markdown 解析器写出来。"}]},{"type":"paragraph","children":[{"type":"text","value":"反思上次的半途而废，决定先读一下 Markdown 的规范，于是把目光瞄向了\n"},{"type":"linkReference","identifier":"gfm-spec","label":"gfm-spec","referenceType":"full","children":[{"type":"text","value":"Github Flavor Markdown"}]},{"type":"text","value":"（简称 GFM），好在它定义得足够详细， 对传统的\nMarkdown 及其几个广泛使用的变种进行了讨论，废除了一些存在歧义的情况，也给了足够多的示例。所以直接以它作为标准进行实现就好了。之后要解决的问题是定义每种数据的结构类型。在2020年1月的时候看到了 "},{"type":"linkReference","identifier":"mdast","label":"mdast","referenceType":"collapsed","children":[{"type":"text","value":"mdast"}]},{"type":"text","value":"，它定义了常见的 Markdown 语法的抽象语法树，参考它的定义制订了一个兼容的版本。接下来是最受煎熬的工作了：根据\n"},{"type":"linkReference","identifier":"gfm-spec","label":"gfm-spec","referenceType":"full","children":[{"type":"text","value":"GFM"}]},{"type":"text","value":" 给出的示例生成测试用例，但是它在示例中的 Output 内容给出的是\nHTML 字符串，需要参照它编写对应的 AST 结构的数据。麻烦的是，抽象语法树中的节点还要求支持 "},{"type":"inlineCode","value":"position"},{"type":"text","value":" 信息，所以那一阵子经常调测试用例调到午夜（太惨了）。以\n"},{"type":"linkReference","identifier":"gfm-spec-example-586","label":"gfm-spec-example-586","referenceType":"full","children":[{"type":"text","value":"GFM example#586"}]},{"type":"text","value":" 为例，希望能带来一个直观的印象："}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"Markdown 字符串："}]},{"type":"code","lang":"markdown","meta":"title=\"source.md\"","value":"![foo](train.jpg)\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"HTML 格式的输出："}]},{"type":"code","lang":"html","meta":"title=\"output.html\"","value":"<img src=\"train.jpg\" alt=\"foo\" />\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"需要转成的 AST 数据："}]},{"type":"code","lang":"json","meta":"title=\"ast.json\" linenos","value":"{\n  \"type\": \"image\",\n  \"url\": \"train.jpg\",\n  \"alt\": \"foo\",\n  \"position\": {\n    \"start\": {\n      \"line\": 1,\n      \"column\": 1,\n      \"offset\": 0\n    },\n    \"end\": {\n      \"line\": 1,\n      \"column\": 18,\n      \"offset\": 17\n    }\n  }\n}\n"}]}]},{"type":"paragraph","children":[{"type":"text","value":"出于扩展性的考虑，我并不满足于单纯地实现 "},{"type":"linkReference","identifier":"gfm-spec","label":"gfm-spec","referenceType":"full","children":[{"type":"text","value":"GFM"}]},{"type":"text","value":" 中定义的规则，还想要集成更多的语法支持，比如脚注"},{"type":"footnoteReference","label":"1","identifier":"footnote-1"},{"type":"text","value":"，或者一些自定义的语法。受到 Koa 中间件思想的影响，我把解析器设计成了由核心算法驱动一个分词器（Tokenizers）列表的方式来完成解析工作，同时提供了一系列的生命周期钩子，这样当定义一个新的数据类型的分词器时，只需要实现对应的生命周期函数，然后把它放入到解析器的分词器列表中合适的位置上就可以和其它分词器协同工作了。"}]},{"type":"paragraph","children":[{"type":"text","value":"之后断断续续地实现了负责解析 "},{"type":"linkReference","identifier":"gfm-spec","label":"gfm-spec","referenceType":"full","children":[{"type":"text","value":"GFM"}]},{"type":"text","value":" 中提到的各类数据类型的分词器，在这个过程中，好几次因为发现现有算法无法通过一些测试用例而又不得不重新审视甚至重写算法；尤其是内联数据的解析，改了好几个版本，最终版本的接口也有些复杂，需要讨论多种情况（一方面也是出于效率的考虑，或许以后会进行整合优化）。就这样，磕磕绊绊地写了一年多，中间改了好几次接口，核心算法也重写了几回，直到2021年7月才算基本完工（当然，中间因为心血来潮造了不少轮子耽搁了一些时间）。最大的感慨是：早期开始写测试用例实在是太明智了，节约了很多的时间（所以我那时也算是“头发渐疏终不悔”了吧）。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"起个中意的名字很重要"}],"identifier":"heading-起个中意的名字很重要"},{"type":"paragraph","children":[{"type":"text","value":"我一直很纠结，不知道该给解析器起个什么样的名字才好，希望它尽可能简洁又包含某种含义（既然是下定决心要花费上一番功夫的东西，当然希望它能够记录下某些东西啦）。有多纠结呢，连代码都只写了类似伪码的东西，随时为想好名字后重建仓库做准备。最后从\n"},{"type":"emphasis","children":[{"type":"text","value":"世界の終わり"}]},{"type":"text","value":"的『"},{"type":"emphasis","children":[{"type":"text","value":"花鳥風月"}]},{"type":"text","value":"』的歌词里找到了 "},{"type":"inlineCode","value":"yozora"},{"type":"text","value":" 这个词，它是日语「よぞら」的罗马音，意为夜空，多少也有些出于纪念这首陪伴了我许多个静谧夜晚的歌曲的缘故吧（这样说来我起名还是蛮随便的23333）。美中不足的是，github 上这个名字已经被占用了。只好退而求其次，在 github 上使用 "},{"type":"linkReference","identifier":"yozorajs","label":"yozorajs","referenceType":"collapsed","children":[{"type":"text","value":"yozorajs"}]},{"type":"text","value":" 这个组织名了。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"画一个中意的图标"}],"identifier":"heading-画一个中意的图标"},{"type":"paragraph","children":[{"type":"text","value":"有了中意的名字后，自然少不了一个中意的图标啦（其实距离起名隔了一年半才画的）。"}]},{"type":"paragraph","children":[{"type":"imageReference","identifier":"yozora-logo","label":"yozora-logo","referenceType":"collapsed","alt":"yozora-logo"}]},{"type":"paragraph","children":[{"type":"text","value":"虽然画得很粗糙，但我确实很中意它。灵感源于前不久去见一位久未谋面的朋友、一位很想见的朋友，在回程的列车上看到那句“树深时见鹿”，当下心间便翻腾着许多思绪。时隔两周后画下了它：这既是头鹿又是棵树，既是可乐也是雪碧，即是星空也是 "},{"type":"inlineCode","value":"Y"},{"type":"text","value":"。当然，我画得有些太丑了，想看出来恐怕需要一些想象力才行。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"其它一些工作"}],"identifier":"heading-其它一些工作"},{"type":"paragraph","children":[{"type":"text","value":"除了解析器，还写了基于 "},{"type":"linkReference","identifier":"react","label":"react","referenceType":"full","children":[{"type":"text","value":"React"}]},{"type":"text","value":" 的渲染器 "},{"type":"linkReference","identifier":"yozora-react","label":"yozora-react","referenceType":"collapsed","children":[{"type":"text","value":"yozora-react"}]},{"type":"text","value":"，负责将 "},{"type":"linkReference","identifier":"yozora","label":"yozora","referenceType":"collapsed","children":[{"type":"text","value":"yozora"}]},{"type":"text","value":"\n解析成的抽象语法树渲染成页面，本文的主体内容就是用它渲染的。为了支持一些可在线编辑的 Demo，还实现了 "},{"type":"linkReference","identifier":"@yozora/react-code-editor","label":"@yozora/react-code-editor","referenceType":"collapsed","children":[{"type":"text","value":"@yozora/react-code-editor"}]},{"type":"text","value":" 和 "},{"type":"linkReference","identifier":"@yozora/react-code-live","label":"@yozora/react-code-live","referenceType":"collapsed","children":[{"type":"text","value":"@yozora/react-code-live"}]},{"type":"text","value":"，灵感源于 "},{"type":"linkReference","identifier":"react-live","label":"react-live","referenceType":"collapsed","children":[{"type":"text","value":"react-live"}]},{"type":"text","value":"。为什么不直接用 "},{"type":"linkReference","identifier":"react-live","label":"react-live","referenceType":"collapsed","children":[{"type":"text","value":"react-live"}]},{"type":"text","value":" 呢，因为想要支持行号、可折叠、滚动等零碎的东西，更重要的是，想要支持其它类型语言的实时编辑渲染的能力，如："}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"这是一个 block 风格的 jsx (tsx) 在线 Demo，需要显示地调用 "},{"type":"inlineCode","value":"render"}]},{"type":"code","lang":"jsx","meta":"live title=\"JSX Demo (block)\" jsxmode=\"block\" maxlines=\"10\" linenos","value":"const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  width: 100%;\n`\n\nconst Box = styled.span`\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n  margin: 0 20px;\n  color: #fff;\n  background: ${props => props.bgColor};\n`\n\nrender(\n  <Container>\n    <Box bgColor=\"red\">Red</Box>\n    <Box bgColor=\"green\">Green</Box>\n    <Box bgColor=\"blue\">Blue</Box>\n  </Container>\n)\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"这是一个 inline 风格的 jsx (tsx) 在线 Demo，直接书写一个 Component 或一个 Function"}]},{"type":"code","lang":"tsx","meta":"live title=\"TSX Demo (inline)\" jsxmode=\"inline\" maxlines=\"10\" linenos","value":"function Counter(): React.ReactElement {\n  const [count, setCount] = React.useState<number>(0)\n  const onIncrement = React.useCallback((): void => setCount(c => c + 1), [])\n  const onDecrement = React.useCallback((): void => setCount(c => c - 1), [])\n\n  const styles = {\n    container: {\n      userSelect: 'none',\n    },\n    text: {\n      display: 'inline-flex',\n      justifyContent: 'center',\n      width: '50px',\n    },\n  }\n\n  return (\n    <div style={styles.container}>\n      <button onClick={onIncrement}>+</button>\n      <span style={styles.text} data-testid=\"counter\">{count}</span>\n      <button onClick={onDecrement}>-</button>\n    </div>\n  )\n}\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"这是一个 Mathjax 在线 Demo （暂不支持语法高亮）"}]},{"type":"code","lang":"tex","meta":"live title=\"Tex Demo\" maxlines=10\" linenos","value":"$$$\n  f(x) = \\left\\lbrace \\begin{aligned}\n    &\\sqrt{x^2 + 1}, &x <= 0\\\\\n    &\\frac{x + 1}{x ^ 3 + 2}, &x > 0\\\\\n  \\end{aligned}\\right. \n$$\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"这是一个 Graphviz 在线 Demo"}]},{"type":"code","lang":"dot","meta":"live engine=\"dot\" title=\"Graphviz Demo\" maxlines=\"10\" linenos","value":"graph bipartite_graph {\n  graph [pad=\"0.212,0.055\" bgcolor=transparent]\n  rankdir=LR\n  node [\n    fillcolor=\"#808080\"\n    fixedsize=true\n    fontcolor=\"#ffffff\"\n    fontsize=14\n    ordering=out\n    shape=circle\n    style=filled\n    width=0.4\n  ]\n\n  subgraph left {\n    1\n    2\n    3\n    4\n  }\n\n  subgraph right {\n    5\n    6\n    7\n  }\n\n  1 -- 5 [penwidth=2 color=violet]\n  1 -- 6 [style=dashed]\n  2 -- 5 [style=dashed]\n  2 -- 6 [style=dashed]\n  2 -- 7 [penwidth=2 color=violet]\n  3 -- 6 [penwidth=2 color=violet]\n  4 -- 7 [style=dashed]\n}\n"}]}]},{"type":"paragraph","children":[{"type":"text","value":"有了自己的 Markdown 解析器和渲染器后，用 "},{"type":"linkReference","identifier":"gatsby","label":"gatsby","referenceType":"collapsed","children":[{"type":"text","value":"gatsby"}]},{"type":"text","value":" 搭建了现在这个博客，为了让它们能够协调工作，又开发了 "},{"type":"linkReference","identifier":"@yozora/gatsby-transformer","label":"@yozora/gatsby-transformer","referenceType":"collapsed","children":[{"type":"text","value":"@yozora/gatsby-transformer"}]},{"type":"text","value":"，有些太折腾了。"}]},{"type":"paragraph","children":[{"type":"text","value":"总觉得有些过于啰嗦了，还是就此打住吧。"}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"小结"}],"identifier":"heading-小结"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"关于博客"}]},{"type":"paragraph","children":[{"type":"text","value":"其实还是有不少地方感到不满意的。比如字体和颜色混乱，比如布局和背景仍然有些别扭，过渡动画也很生硬，最重要的是页面的加载速度很慢（做了一番尝试也没能顺利优化）。"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"关于 "},{"type":"inlineCode","value":"yozora"}]},{"type":"paragraph","children":[{"type":"text","value":"磕磕绊绊花了不少时间，前后也改了好几次核心算法，写工程项目需要考虑的问题也更多；不过完整地实现某个规范还是挺有成就感的。虽然实现了 "},{"type":"linkReference","identifier":"gfm-spec","label":"gfm-spec","referenceType":"full","children":[{"type":"text","value":"GFM 规范"}]},{"type":"text","value":" 中提到的规则并通过几乎所有（除了 "},{"type":"linkReference","identifier":"gfm-spec-example-653","label":"gfm-spec-example-653","referenceType":"full","children":[{"type":"text","value":"example-653"}]},{"type":"text","value":" ，因为渲染器不打算支持原生的 HTML Tag，所以懒得做过滤，如果有需要自行做一下过滤就好了）由规范中提到的示例改造的测试用例，但应该还是有一些情况没有考虑到，以后碰到了再慢慢完善吧。此外，由于整个项目完全用 "},{"type":"linkReference","identifier":"typescript","label":"typescript","referenceType":"full","children":[{"type":"text","value":"Typescript"}]},{"type":"text","value":" 编写，且零外部依赖，所以有意将其转成 "},{"type":"linkReference","identifier":"deno","label":"deno","referenceType":"full","children":[{"type":"text","value":"Deno"}]},{"type":"text","value":" 项目；不过短期内应该不会动手做这件事，"},{"type":"delete","children":[{"type":"text","value":"太懒了"}]},{"type":"text","value":"想要尝试其它事物了。"}]},{"type":"paragraph","children":[{"type":"text","value":"目前已经有其它支持将 Markdown 语法的字符串转成 mdast 的项目了，而且已经被广泛使用（我在写 "},{"type":"linkReference","identifier":"yozora","label":"yozora","referenceType":"collapsed","children":[{"type":"text","value":"yozora"}]},{"type":"text","value":" 时它们还未被开发出来或者我未找到相关项目），不过我没有仔细地拿它们和 "},{"type":"linkReference","identifier":"yozora","label":"yozora","referenceType":"collapsed","children":[{"type":"text","value":"yozora"}]},{"type":"text","value":" 做对比（也无意在此处讨论）；甚至 mdx 进一步支持直接在 Markdown 中写 JSX 代码。所以多少还是会觉得有些冷清。"}]}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"一些感悟"}],"identifier":"heading-一些感悟"},{"type":"paragraph","children":[{"type":"text","value":"写完了但没有完全写完，总是有各种各样的不满意，甚至会觉得有些拿不出手；这也或许是坚持去做某件事的风险？当某一刻发现自己所曾热衷于的某项事物，原来只是自以为是地赋予了自己某种使命感，于是笃定不移地以近乎悲壮的心情将满腔热血白白地浇灌在一片极其平凡亦或是无人问津的土壤上，又或是在这个过程里总算认识到了自己的平庸；无论哪一种都不太让人感到高兴啊。虽然彷佛花了很大的力气做了一件一点也不酷的事情（又菜又任性），但其实在这个过程中好几次都会遥想写下此文时的心情（又菜又爱炫耀）。许是半途而废的次数太多了，所以才很想要能够坚持完成某件事情（某种程度上来说恐怕都快要发展成执念了）。不过话说回来，人生在世，岂有那么多是非要做到不可又或者是平白无故的毫无意义呢。"}]},{"type":"paragraph","children":[{"type":"text","value":"时间总比预料的要流逝得快上一些，我依然没想明白该怎么对付它或者说该如何与它和平共处，它只自顾自地飞驰而过，我却怎么也无法将之忽视。最近看到一句诗多少有些释怀，分享于此与诸君共勉：“"},{"type":"strong","children":[{"type":"text","value":"有花堪折直须折，莫待无花空折枝"}]},{"type":"text","value":"”。"}]},{"type":"paragraph","children":[{"type":"text","value":"嘛，谨以此纪念这段不算短暂却也飞逝而去又去而不复返的寻常时光。"}]}]},"toc":{"children":[{"depth":2,"identifier":"heading-起因","contents":[{"type":"text","value":"起因"}],"children":[{"depth":3,"identifier":"heading-从-logdown-到-hexo","contents":[{"type":"text","value":"从 logdown 到 hexo"}],"children":[]},{"depth":3,"identifier":"heading-放弃-hexo","contents":[{"type":"text","value":"放弃 hexo"}],"children":[]},{"depth":3,"identifier":"heading-碎碎念","contents":[{"type":"text","value":"碎碎念"}],"children":[]}]},{"depth":2,"identifier":"heading-开始造轮子","contents":[{"type":"text","value":"开始造轮子"}],"children":[{"depth":3,"identifier":"heading-起个中意的名字很重要","contents":[{"type":"text","value":"起个中意的名字很重要"}],"children":[]},{"depth":3,"identifier":"heading-画一个中意的图标","contents":[{"type":"text","value":"画一个中意的图标"}],"children":[]},{"depth":3,"identifier":"heading-其它一些工作","contents":[{"type":"text","value":"其它一些工作"}],"children":[]}]},{"depth":2,"identifier":"heading-小结","contents":[{"type":"text","value":"小结"}],"children":[]},{"depth":2,"identifier":"heading-一些感悟","contents":[{"type":"text","value":"一些感悟"}],"children":[]}]},"ecmaImports":[],"definitionMap":{"yozora-logo":{"type":"definition","identifier":"yozora-logo","label":"yozora-logo","url":"/asset/essay/img/6609e438-6fa9-51a2-bf6d-7e199d54f22d.png?width=400&height=575"},"gfm-spec":{"type":"definition","identifier":"gfm-spec","label":"gfm-spec","url":"https://github.github.com/gfm"},"gfm-spec-example-653":{"type":"definition","identifier":"gfm-spec-example-653","label":"gfm-spec-example-653","url":"https://github.github.com/gfm/#example-653"},"gfm-spec-example-586":{"type":"definition","identifier":"gfm-spec-example-586","label":"gfm-spec-example-586","url":"https://github.github.com/gfm/#example-586"},"deno":{"type":"definition","identifier":"deno","label":"deno","url":"https://github.com/denoland/deno"},"gatsby":{"type":"definition","identifier":"gatsby","label":"gatsby","url":"https://github.com/gatsbyjs/gatsby"},"hexo":{"type":"definition","identifier":"hexo","label":"hexo","url":"https://github.com/hexojs/hexo"},"markdown-it":{"type":"definition","identifier":"markdown-it","label":"markdown-it","url":"https://github.com/markdown-it/markdown-it"},"mathjax":{"type":"definition","identifier":"mathjax","label":"mathjax","url":"https://github.com/mathjax/MathJax"},"mdast":{"type":"definition","identifier":"mdast","label":"mdast","url":"https://github.com/syntax-tree/mdast"},"react":{"type":"definition","identifier":"react","label":"react","url":"https://github.com/facebook/react"},"react-live":{"type":"definition","identifier":"react-live","label":"react-live","url":"https://github.com/FormidableLabs/react-live"},"typescript":{"type":"definition","identifier":"typescript","label":"typescript","url":"https://github.com/microsoft/TypeScript"},"yilia":{"type":"definition","identifier":"yilia","label":"yilia","url":"https://github.com/litten/hexo-theme-yilia"},"yozora":{"type":"definition","identifier":"yozora","label":"yozora","url":"https://github.com/yozorajs/yozora"},"yozorajs":{"type":"definition","identifier":"yozorajs","label":"yozorajs","url":"https://github.com/yozorajs"},"yozora-react":{"type":"definition","identifier":"yozora-react","label":"yozora-react","url":"https://github.com/yozorajs/yozora-react"},"@yozora/gatsby-transformer":{"type":"definition","identifier":"@yozora/gatsby-transformer","label":"@yozora/gatsby-transformer","url":"https://www.npmjs.com/package/@yozora/gatsby-transformer"},"@yozora/react-code-editor":{"type":"definition","identifier":"@yozora/react-code-editor","label":"@yozora/react-code-editor","url":"https://www.npmjs.com/package/@yozora/react-code-editor"},"@yozora/react-code-live":{"type":"definition","identifier":"@yozora/react-code-live","label":"@yozora/react-code-live","url":"https://www.npmjs.com/package/@yozora/react-code-live"}},"footnoteDefinitionMap":{"footnote-1":{"type":"footnoteDefinition","identifier":"footnote-1","label":"1","children":[{"type":"paragraph","children":[{"type":"text","value":"这是一个脚注示例"}]}]}},"images":[{"alt":"yozora-logo","src":"/asset/essay/img/6609e438-6fa9-51a2-bf6d-7e199d54f22d.png?width=400&height=575"}],"paginationUrl":"/essays/1","prev":null,"next":null,"aplayerOptions":{"audio":[{"name":"清新之流","artist":"LJC 一直想要一个长名字","url":"https://github.com/guanghechen/static-resources/raw/main/audio/LJC%E4%B8%80%E7%9B%B4%E6%83%B3%E8%A6%81%E4%B8%80%E4%B8%AA%E9%95%BF%E5%90%8D%E5%AD%97/%E6%B8%85%E6%96%B0%E4%B9%8B%E6%B5%81/music.mp3","cover":"/asset/essay/img/72cc2895-1b4e-511d-acf0-ffb0babb3fb4.jpeg?width=130&height=130","lrc":"/asset/essay/file/fe5561cf-e828-504b-aafe-f1a8e1b7d0b9.lyric"}]}}}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"✨光和尘一直想要一个清爽博客 | guanghechen"}],["$","meta","3",{"name":"description","content":"✨光和尘一直想要一个清爽博客"}],["$","meta","4",{"name":"application-name","content":"guanghechen"}],["$","link","5",{"rel":"author","href":"https://github.com/guanghechen"}],["$","meta","6",{"name":"author","content":"光和尘"}],["$","link","7",{"rel":"icon","href":"/favicon.png"}],["$","meta","8",{"name":"next-size-adjust"}]]
1:null
