{"componentChunkName":"component---src-layout-post-post-tsx","path":"/post/algorithm/shuffle/","result":{"data":{"content":{"title":"洗牌问题和 knuth-shuffle 算法","description":"洗牌问题和 knuth-shuffle 算法","createdAt":"July 22, 2021","updatedAt":null,"timeToRead":"3min 19s","frontmatter2":{"aplayer":null,"wechatThumbnail":null},"toc":{"children":[{"depth":2,"identifier":"heading-约瑟夫环","contents":[{"type":"text","value":"约瑟夫环"}],"children":[]},{"depth":2,"identifier":"heading-knuth-shuffle","contents":[{"type":"text","value":"knuth-shuffle"}],"children":[{"depth":3,"identifier":"heading-算法描述","contents":[{"type":"text","value":"算法描述"}],"children":[]},{"depth":3,"identifier":"heading-程序实现","contents":[{"type":"text","value":"程序实现"}],"children":[]}]}]},"categories":[],"tags":["shuffle","knuth-shuffle","约瑟夫环"],"ast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"对于给定的 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 个数，将其公平地随机打乱，使得每个位置上每个数出现的概率相等。"}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"约瑟夫环"}],"identifier":"heading-约瑟夫环"},{"type":"paragraph","children":[{"type":"text","value":"遍历位置 "},{"type":"inlineMath","value":"i"},{"type":"text","value":"，每次从剩余的数中随机取一个放到该位置上。由此可以将问题归约到\n"},{"type":"linkReference","identifier":"不定步长约瑟夫环问题","label":"不定步长约瑟夫环问题","referenceType":"collapsed","children":[{"type":"text","value":"不定步长约瑟夫环问题"}]},{"type":"text","value":"，即："},{"type":"inlineMath","value":"N"},{"type":"text","value":" 个人围坐一圈，从 "},{"type":"inlineMath","value":"1"},{"type":"text","value":" 开始报数，每次随机一个数 "},{"type":"inlineMath","value":"x"},{"type":"text","value":"，报到 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 的人从圈中离开，然后进入下一轮游戏。因为需要求离开的顺序，所以不能使用递推法，只能用树状数组+二分，复杂度为："}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"时间复杂度： "},{"type":"inlineMath","value":"O(N \\cdot \\log^2 N)"}]},{"type":"listItem","children":[{"type":"text","value":"额外空间复杂度： "},{"type":"inlineMath","value":"O(N)"}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"knuth-shuffle"}],"identifier":"heading-knuth-shuffle"},{"type":"paragraph","children":[{"type":"text","value":"进一步考虑，在 shuffle 问题中，我们并不需要保证每个“人”的相对位置不变，也不必每次从上一个被踢的位置开始继续报数，而是只需要保证剩下的“人”被选出来的概率相同即可；如果能让剩下的人始终紧密地聚集到一起，那么利用数组的索引特性，每次 "},{"type":"inlineMath","value":"O(1)"},{"type":"text","value":" 即可选出该轮应该被踢出的“人”。"}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"算法描述"}],"identifier":"heading-算法描述"},{"type":"list","ordered":true,"orderType":"1","start":1,"marker":46,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"从第 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 个位置（最右侧）开始向左遍历位置 "},{"type":"inlineMath","value":"i"}]},{"type":"listItem","children":[{"type":"text","value":"每次从最左侧到当前位置 "},{"type":"inlineMath","value":"i"},{"type":"text","value":" 上的所有数中随机选择一个数和当前位置的数进行交换"}]}]},{"type":"paragraph","children":[{"type":"text","value":"应用上述算法，每个数字出现的概率为："}]},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"第 "},{"type":"inlineMath","value":"N"},{"type":"text","value":" 个位置上，每个数出现的概率为："},{"type":"inlineMath","value":"\\displaystyle \\frac{1}{N}"}]},{"type":"listItem","children":[{"type":"text","value":"第 "},{"type":"inlineMath","value":"N-1"},{"type":"text","value":" 个位置上，每个数出现的概率为："},{"type":"inlineMath","value":"\\displaystyle \\frac{N-1}{N} \\times \\frac{1}{N-1}=\\frac{1}{N}"}]},{"type":"listItem","children":[{"type":"text","value":"..."}]},{"type":"listItem","children":[{"type":"text","value":"第 "},{"type":"inlineMath","value":"x"},{"type":"text","value":" 个位置上，每个数出现的概率为："},{"type":"inlineMath","value":"\\displaystyle \\frac{N-1}{N} \\times \\frac{N-2}{N-1} \\times \\cdots \\times \\frac{1}{N-x}=\\frac{1}{N}"}]},{"type":"listItem","children":[{"type":"text","value":"..."}]}]},{"type":"heading","depth":3,"children":[{"type":"text","value":"程序实现"}],"identifier":"heading-程序实现"},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"时间复杂度： "},{"type":"inlineMath","value":"O(N)"}]},{"type":"listItem","children":[{"type":"text","value":"额外空间复杂度： "},{"type":"inlineMath","value":"O(1)"}]}]},{"type":"code","lang":"typescript","meta":"title=\"knuth-shuffle.ts\" collapsed linenos","value":"export function knuthShuffle<T extends unknown = unknown>(nodes: T[]): void {\n  const N = nodes.length\n  for (let i = N - 1, j: number, x: T; i > 0; --i) {\n    j = Math.floor(Math.random() * (i + 1))\n    x = nodes[i]\n    nodes[i] = nodes[j]\n    nodes[j] = x\n  }\n}\n"}]},"ecmaImports":[],"definitionMap":{"不定步长约瑟夫环问题":{"type":"definition","identifier":"不定步长约瑟夫环问题","label":"不定步长约瑟夫环问题","url":"/post/quiz/classical/Josephus-ring/#heading-%E4%B8%8D%E5%AE%9A%E6%AD%A5%E9%95%BF%E7%9A%84%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98"}},"footnoteDefinitionMap":{},"fields":{"slug":"/post/algorithm/shuffle/"}},"previous":{"title":"统计区间内的线段","fields":{"slug":"/post/quiz/scanning-line/segments/"}},"next":{"title":"精确覆盖问题和 DLX 算法","fields":{"slug":"/post/algorithm/dlx/"}},"postItems":{"nodes":[{"title":"洗牌问题和 knuth-shuffle 算法","createdAt":"2021-07-22","tags":["shuffle","knuth-shuffle","约瑟夫环"],"fields":{"slug":"/post/algorithm/shuffle/"}},{"title":"编译原理-语法制导翻译实现计算器","createdAt":"2016-06-23","tags":["编译原理","语法制导翻译","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/exercise/"}},{"title":"编译原理-语法分析","createdAt":"2016-06-18","tags":["编译原理","语法分析","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/grammar/"}},{"title":"端口管理","createdAt":"2021-06-20","tags":["network","port","ssh","netstat"],"fields":{"slug":"/post/network/端口管理/"}},{"title":"防抖和节流","createdAt":"2021-09-03","tags":["coding","debounce","throttle"],"fields":{"slug":"/post/algorithm/debounce-and-throttle/"}},{"title":"精确覆盖问题和 DLX 算法","createdAt":"2021-07-24","tags":["算法","精确覆盖","DLX 算法"],"fields":{"slug":"/post/algorithm/dlx/"}},{"title":"背包九讲","createdAt":"2021-06-27","tags":["acm","算法","动态规划","背包问题"],"fields":{"slug":"/post/algorithm/knapsack/"}},{"title":"最长公共子序列（LCS）","createdAt":"2021-06-02","tags":["最长公共子序列","LCS"],"fields":{"slug":"/post/algorithm/lcs/"}},{"title":"最长上升子序列（LIS）","createdAt":"2021-06-02","tags":["最长上升子序列","LIS"],"fields":{"slug":"/post/algorithm/lis/"}},{"title":"当你想来一把数独","createdAt":"2021-08-01","tags":["game","sudoku"],"fields":{"slug":"/post/game/sudoku/"}},{"title":"函数的极限","createdAt":"2021-05-09","tags":["math","函数","极限"],"fields":{"slug":"/post/math/calculus/函数的极限/"}},{"title":"自然对数底数e","createdAt":"2021-08-07","tags":["math","函数","极限","自然对数"],"fields":{"slug":"/post/math/calculus/自然对数底数e/"}},{"title":"小球放盒模型","createdAt":"2016-04-22","tags":["math","组合数学"],"fields":{"slug":"/post/math/combinatorial/小球放盒模型/"}},{"title":"不修改数组找出重复的数字","createdAt":"2021-06-29","tags":["quiz","分治","追击"],"fields":{"slug":"/post/quiz/partition/find-duplicate-number/"}},{"title":"统计区间内的线段","createdAt":"2021-07-21","tags":["quiz","扫描线","前缀和","树状数组","线段树"],"fields":{"slug":"/post/quiz/scanning-line/segments/"}},{"title":"CSS 选择器","createdAt":"2020-11-02","tags":["web","frontend","css"],"fields":{"slug":"/post/web/css/selector/"}},{"title":"ECMA 2020 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2020/"}},{"title":"ECMA 2021 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2021/"}},{"title":"Javascript 踩坑记——继承和原型链","createdAt":"2021-09-05","tags":["studynote","javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/inherit/"}},{"title":"React Reconciliation","createdAt":"2021-06-26","tags":["react","react reconciliation"],"fields":{"slug":"/post/web/react/reconciliation/"}},{"title":"XSS 与 CSRF 的攻防","createdAt":"2021-08-19","tags":["web","web security","csrf"],"fields":{"slug":"/post/web/security/xss-csrf/"}},{"title":"二分图","createdAt":"2016-07-17","tags":["算法","图论","二分图","学习笔记"],"fields":{"slug":"/post/algorithm/graph/bipartite-graph/"}},{"title":"最长回文子串 Manacher 算法","createdAt":"2016-04-18","tags":["算法","字符串","回文串","manacher"],"fields":{"slug":"/post/algorithm/string/manacher/"}},{"title":"树链剖分","createdAt":"2016-04-23","tags":["acm","算法","树链剖分"],"fields":{"slug":"/post/algorithm/tree/tcs/"}},{"title":"伸展树专题","createdAt":"2016-07-03","tags":["acm","Splay","解题报告","专题训练"],"fields":{"slug":"/post/data-structure/bbst/splay/"}},{"title":"组合游戏基础之 SG 函数和 SG 定理","createdAt":"2016-09-04","tags":["组合数学","组合游戏","SG 定理"],"fields":{"slug":"/post/math/combinatorial/SG/"}},{"title":"快速傅里叶变换和雷德算法","createdAt":"2016-04-10","tags":["acm","大数乘法","fft","快速傅里叶变换"],"fields":{"slug":"/post/math/number-theory/fft/"}},{"title":"数论基础之筛法","createdAt":"2016-05-06","tags":["math","数论","素数","欧拉函数","线性筛"],"fields":{"slug":"/post/math/number-theory/sieve/"}},{"title":"数论基础之原根","createdAt":"2016-05-16","tags":["math","数论","原根"],"fields":{"slug":"/post/math/number-theory/原根/"}},{"title":"数论基础之欧拉函数","createdAt":"2016-05-10","tags":["math","数论","既约剩余系","欧拉函数"],"fields":{"slug":"/post/math/number-theory/欧拉函数/"}},{"title":"约瑟夫环问题","createdAt":"2021-07-16","tags":["quiz","经典问题","约瑟夫环"],"fields":{"slug":"/post/quiz/classical/Josephus-ring/"}},{"title":"扔鸡蛋问题","createdAt":"2021-06-20","tags":["quiz","动态规划"],"fields":{"slug":"/post/quiz/dp/egg-drop/"}},{"title":"在 excel 中启用正则表达式","createdAt":"2021-03-29","tags":["excel","tools"],"fields":{"slug":"/post/tool/excel/regex/"}},{"title":"百度之星 2016 解题报告","createdAt":"2016-06-03","tags":["acm","递推","状态压缩","动态规划","字典树","解题报告"],"fields":{"slug":"/post/acm/contest/baiduzhixing/2016/"}},{"title":"51nod-1462 数据结构 -- 解题报告","createdAt":"2016-04-23","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/51nod/1462/"}},{"title":"HDU-5306 Gorgeous Sequence 解题报告","createdAt":"2016-04-09","tags":["acm","数据结构","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5306/"}},{"title":"HDU-5574 Colorful Tree 解题报告（原 2015-上海区域赛-C）","createdAt":"2016-04-12","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5574/"}},{"title":"HDU-5576 Expection of String 解题报告（原 2015-上海区域赛-E)","createdAt":"2016-04-24","tags":["acm","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5576/"}},{"title":"剑指offer 解题报告","createdAt":"2021-07-15","tags":["专题训练","解题报告"],"fields":{"slug":"/post/acm/oj/nowcoder/jz-offer/"}},{"title":"POJ-1324 Holedox Moving 解题报告","createdAt":"2016-04-13","tags":["acm","bfs","图论","状态压缩","解题报告"],"fields":{"slug":"/post/acm/oj/poj/1324/"}},{"title":"网络流 24 题","createdAt":"2016-07-30","tags":["acm","算法","图论","网络流","二分图","解题报告","专题训练"],"fields":{"slug":"/post/algorithm/graph/network-flow/24-problems/"}},{"title":"网络流基础之最大权闭合图","createdAt":"2016-07-24","tags":["算法","图论","网络流","最大权闭合图"],"fields":{"slug":"/post/algorithm/graph/network-flow/最大权闭合图/"}},{"title":"Dijkstra 算法","createdAt":"2021-05-29","tags":["算法","最短路","单源最短路","dijkstra"],"fields":{"slug":"/post/algorithm/graph/shortest-path/dijkstra/"}},{"title":"Custom React Hooks","createdAt":"2020-10-29","tags":["react","react hooks"],"fields":{"slug":"/post/web/react/hooks/custom/"}},{"title":"2016 多校第 2 场","createdAt":"2016-07-22","tags":["acm","训练赛","数据结构","解题报告"],"fields":{"slug":"/post/acm/contest/multi-university-training/2016/2/"}},{"title":"CCF 2015-09 最佳文章 解题报告","createdAt":"2016-06-26","tags":["acm","Aho-Corasick 自动机","矩阵快速幂","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/ccf/2015/09/E/"}},{"title":"数论基础之模方程初步","createdAt":"2016-05-04","tags":["math","数论","扩展欧几里得算法","中国剩余定理","Baby Step Gaint Step"],"fields":{"slug":"/post/math/number-theory/模方程/basic/"}}]}},"pageContext":{"id":"d58bda2b-bb11-504f-a720-b25dfe96ab55","contentType":"post","paginationUrl":"/posts","previousPostId":"a8643d05-5265-5995-bc3a-ff7bf079be0b","nextPostId":"fd25419c-3328-525a-aa06-a60376789227"}},"staticQueryHashes":[],"slicesMap":{}}