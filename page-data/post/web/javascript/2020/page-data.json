{"componentChunkName":"component---src-layout-post-post-tsx","path":"/post/web/javascript/2020/","result":{"data":{"content":{"title":"ECMA 2020 新特性","description":"New features in ECMA 2020","createdAt":"April 05, 2021","updatedAt":null,"timeToRead":"2min 42s","frontmatter2":{"aplayer":null,"wechatThumbnail":null},"toc":{"children":[{"depth":2,"identifier":"heading-操作符","contents":[{"type":"inlineCode","value":"?."},{"type":"text","value":" 操作符"}],"children":[]},{"depth":2,"identifier":"heading-操作符-2","contents":[{"type":"inlineCode","value":"??"},{"type":"text","value":" 操作符"}],"children":[]},{"depth":2,"identifier":"heading-bigint","contents":[{"type":"inlineCode","value":"BigInt"}],"children":[]},{"depth":2,"identifier":"heading-promise-allsettled","contents":[{"type":"inlineCode","value":"Promise.allSettled"}],"children":[]},{"depth":2,"identifier":"heading-string-prototype-matchall","contents":[{"type":"inlineCode","value":"String.prototype.matchAll()"}],"children":[]},{"depth":2,"identifier":"heading-globalthis","contents":[{"type":"inlineCode","value":"globalThis"}],"children":[]},{"depth":2,"identifier":"heading-import-meta","contents":[{"type":"inlineCode","value":"import.meta"}],"children":[]},{"depth":2,"identifier":"heading-dynamic-imports-via-import","contents":[{"type":"text","value":"Dynamic imports via "},{"type":"inlineCode","value":"import()"}],"children":[]},{"depth":2,"identifier":"heading-namespace-re-exporting-export-as-ns-from-mod","contents":[{"type":"text","value":"Namespace re-exporting: "},{"type":"inlineCode","value":"export * as ns from 'mod'"}],"children":[]},{"depth":2,"identifier":"heading-related","contents":[{"type":"text","value":"Related"}],"children":[]}]},"categories":[],"tags":["javascript","ecmascript"],"ast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"?."},{"type":"text","value":" 操作符"}],"identifier":"heading-操作符"},{"type":"paragraph","children":[{"type":"inlineCode","value":"?."},{"type":"text","value":" 是链式调用操作符，当操作符左侧变量不存在时会返回 "},{"type":"inlineCode","value":"undefined"},{"type":"text","value":"，并中断链式调用。其英文名称为 "},{"type":"linkReference","identifier":"optional-chaining-operator","label":"optional-chaining-operator","referenceType":"full","children":[{"type":"text","value":"Optional chaining for property accesses and method calls"}]}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"Demo"}]},{"type":"code","lang":"javascript","meta":null,"value":"o?.prop\no?.['prop']\nf?.(arg1, arg2)\n"},{"type":"paragraph","children":[{"type":"text","value":"等价于"}]},{"type":"code","lang":"javascript","meta":null,"value":"(o !== undefined && o !== null) ? o.prop : undefined\n(o !== undefined && o !== null) ? o['prop'] : undefined\n(f !== undefined && f !== null) ? f(arg1, arg2) : undefined\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"需要注意，当操作符左侧不是可调用的对象时，如 "},{"type":"inlineCode","value":"true?.(123)"},{"type":"text","value":" 则会产生一个\n"},{"type":"inlineCode","value":"TypeError"},{"type":"text","value":" 异常；因为此操作符的设计目的是容忍刻意的省略，因此对于类型错误应该抛出异常，而不是忽略它。"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"对于带有 "},{"type":"inlineCode","value":"?."},{"type":"text","value":" 的链式调用，当中间路径不存在时，中间的函数调用不会得到执行，如："}]},{"type":"code","lang":"javascript","meta":null,"value":"function isInvoked(obj) {\n  let invoked = false;\n  obj?.a.b.m(invoked = true);\n  return invoked;\n}\n\nisInvoked({a: {b: {m() {}}}}) // => true\nisInvoked(undefined) {}}}}) // => false\n"}]}]},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"??"},{"type":"text","value":" 操作符"}],"identifier":"heading-操作符-2"},{"type":"paragraph","children":[{"type":"inlineCode","value":"??"},{"type":"text","value":" 操作符类似 "},{"type":"inlineCode","value":"||"},{"type":"text","value":"，只不过其中断条件为非 "},{"type":"inlineCode","value":"null"},{"type":"text","value":" 或 "},{"type":"inlineCode","value":"undefined"},{"type":"text","value":" 值，而 "},{"type":"inlineCode","value":"||"},{"type":"text","value":"\n中断条件为任意 "},{"type":"emphasis","children":[{"type":"text","value":"Truthy"}]},{"type":"text","value":" 的值。其英文名称为 "},{"type":"linkReference","identifier":"nullish-coalescing-operator","label":"nullish-coalescing-operator","referenceType":"full","children":[{"type":"text","value":"Nullish coalescing operator"}]}]},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"示例"}]},{"type":"code","lang":"javascript","meta":null,"value":"a ?? b\n"},{"type":"paragraph","children":[{"type":"text","value":"等价于"}]},{"type":"code","lang":"javascript","meta":null,"value":"(a !== undefined && a !== null) ? a : b\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"短路赋值用法（ES2021）： "},{"type":"inlineCode","value":"a ??= b"},{"type":"text","value":" 等价于 "},{"type":"inlineCode","value":"a ?? (a = b)"}]}]}]},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"BigInt"}],"identifier":"heading-bigint"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"以 "},{"type":"inlineCode","value":"n"},{"type":"text","value":" 结尾的数字会自动转成 "},{"type":"inlineCode","value":"BigInt"}]},{"type":"code","lang":"javascript","meta":null,"value":"2n**53n + 1n // => 9007199254740993n\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"也可以通过函数 "},{"type":"inlineCode","value":"BigInt"},{"type":"text","value":" 创建"}]},{"type":"code","lang":"javascript","meta":null,"value":"BigInt(123)       // ==> 123n\nBigInt('123')     // ==> 123n\nBigInt('0xFF')    // ==> 255n\nBigInt('0b1101')  // ==> 13n\nBigInt('0o777')   // ==> 511n\n"}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"BigInt"},{"type":"text","value":" 仅接受整数或整数字符串"}]},{"type":"code","lang":"javascript","meta":null,"value":"BigInt(123.45)    // ==> RangeError\n"}]}]},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Promise.allSettled"}],"identifier":"heading-promise-allsettled"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"示例"}]},{"type":"code","lang":"javascript","meta":null,"value":"Promise.allSettled([\n  Promise.resolve('a'),\n  Promise.reject('b'),\n])\n  .then(arr => assert.deepEqual(arr, [\n    { status: 'fulfilled', value:  'a' },\n    { status: 'rejected',  reason: 'b' },\n  ]))\n"}]}]},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"String.prototype.matchAll()"}],"identifier":"heading-string-prototype-matchall"},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"globalThis"}],"identifier":"heading-globalthis"},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"import.meta"}],"identifier":"heading-import-meta"},{"type":"paragraph","children":[{"type":"text","value":"The object import.meta holds metadata for the current module."}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dynamic imports via "},{"type":"inlineCode","value":"import()"}],"identifier":"heading-dynamic-imports-via-import"},{"type":"heading","depth":2,"children":[{"type":"text","value":"Namespace re-exporting: "},{"type":"inlineCode","value":"export * as ns from 'mod'"}],"identifier":"heading-namespace-re-exporting-export-as-ns-from-mod"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"示例"}]},{"type":"code","lang":"javascript","meta":null,"value":"// Named exports\nexport function f() {}\nexport const one = 1;\nexport {foo, b as bar};\n\n// Default exports\nexport default function f() {} // declaration with optional name\n// Replacement for `const` (there must be exactly one value)\nexport default 123;\n\n// Re-exporting from another module\nexport {foo, b as bar} from './some-module.mjs';\nexport * from './some-module.mjs';\nexport * as ns from './some-module.mjs'; // ES2020\n"}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related"}],"identifier":"heading-related"},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"link","url":"https://exploringjs.com/impatient-js/ch_new-javascript-features.html#new-in-es2020","children":[{"type":"text","value":"New Javascript Features"}]}]}]}]},"ecmaImports":[],"definitionMap":{"optional-chaining-operator":{"type":"definition","identifier":"optional-chaining-operator","label":"optional-chaining-operator","url":"https://exploringjs.com/impatient-js/ch_single-objects.html#optional-chaining"},"nullish-coalescing-operator":{"type":"definition","identifier":"nullish-coalescing-operator","label":"nullish-coalescing-operator","url":"https://exploringjs.com/impatient-js/ch_undefined-null.html#nullish-coalescing-operator"}},"footnoteDefinitionMap":{},"fields":{"slug":"/post/web/javascript/2020/"}},"previous":{"title":"ECMA 2021 新特性","fields":{"slug":"/post/web/javascript/2021/"}},"next":{"title":"函数的极限","fields":{"slug":"/post/math/calculus/函数的极限/"}},"postItems":{"nodes":[{"title":"洗牌问题和 knuth-shuffle 算法","createdAt":"2021-07-22","tags":["shuffle","knuth-shuffle","约瑟夫环"],"fields":{"slug":"/post/algorithm/shuffle/"}},{"title":"编译原理-语法制导翻译实现计算器","createdAt":"2016-06-23","tags":["编译原理","语法制导翻译","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/exercise/"}},{"title":"编译原理-语法分析","createdAt":"2016-06-18","tags":["编译原理","语法分析","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/grammar/"}},{"title":"端口管理","createdAt":"2021-06-20","tags":["network","port","ssh","netstat"],"fields":{"slug":"/post/network/端口管理/"}},{"title":"防抖和节流","createdAt":"2021-09-03","tags":["coding","debounce","throttle"],"fields":{"slug":"/post/algorithm/debounce-and-throttle/"}},{"title":"精确覆盖问题和 DLX 算法","createdAt":"2021-07-24","tags":["算法","精确覆盖","DLX 算法"],"fields":{"slug":"/post/algorithm/dlx/"}},{"title":"背包九讲","createdAt":"2021-06-27","tags":["acm","算法","动态规划","背包问题"],"fields":{"slug":"/post/algorithm/knapsack/"}},{"title":"最长公共子序列（LCS）","createdAt":"2021-06-02","tags":["最长公共子序列","LCS"],"fields":{"slug":"/post/algorithm/lcs/"}},{"title":"最长上升子序列（LIS）","createdAt":"2021-06-02","tags":["最长上升子序列","LIS"],"fields":{"slug":"/post/algorithm/lis/"}},{"title":"当你想来一把数独","createdAt":"2021-08-01","tags":["game","sudoku"],"fields":{"slug":"/post/game/sudoku/"}},{"title":"函数的极限","createdAt":"2021-05-09","tags":["math","函数","极限"],"fields":{"slug":"/post/math/calculus/函数的极限/"}},{"title":"自然对数底数e","createdAt":"2021-08-07","tags":["math","函数","极限","自然对数"],"fields":{"slug":"/post/math/calculus/自然对数底数e/"}},{"title":"小球放盒模型","createdAt":"2016-04-22","tags":["math","组合数学"],"fields":{"slug":"/post/math/combinatorial/小球放盒模型/"}},{"title":"不修改数组找出重复的数字","createdAt":"2021-06-29","tags":["quiz","分治","追击"],"fields":{"slug":"/post/quiz/partition/find-duplicate-number/"}},{"title":"统计区间内的线段","createdAt":"2021-07-21","tags":["quiz","扫描线","前缀和","树状数组","线段树"],"fields":{"slug":"/post/quiz/scanning-line/segments/"}},{"title":"CSS 选择器","createdAt":"2020-11-02","tags":["web","frontend","css"],"fields":{"slug":"/post/web/css/selector/"}},{"title":"ECMA 2020 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2020/"}},{"title":"ECMA 2021 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2021/"}},{"title":"Javascript 踩坑记——继承和原型链","createdAt":"2021-09-05","tags":["studynote","javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/inherit/"}},{"title":"React Reconciliation","createdAt":"2021-06-26","tags":["react","react reconciliation"],"fields":{"slug":"/post/web/react/reconciliation/"}},{"title":"XSS 与 CSRF 的攻防","createdAt":"2021-08-19","tags":["web","web security","csrf"],"fields":{"slug":"/post/web/security/xss-csrf/"}},{"title":"二分图","createdAt":"2016-07-17","tags":["算法","图论","二分图","学习笔记"],"fields":{"slug":"/post/algorithm/graph/bipartite-graph/"}},{"title":"最长回文子串 Manacher 算法","createdAt":"2016-04-18","tags":["算法","字符串","回文串","manacher"],"fields":{"slug":"/post/algorithm/string/manacher/"}},{"title":"树链剖分","createdAt":"2016-04-23","tags":["acm","算法","树链剖分"],"fields":{"slug":"/post/algorithm/tree/tcs/"}},{"title":"伸展树专题","createdAt":"2016-07-03","tags":["acm","Splay","解题报告","专题训练"],"fields":{"slug":"/post/data-structure/bbst/splay/"}},{"title":"组合游戏基础之 SG 函数和 SG 定理","createdAt":"2016-09-04","tags":["组合数学","组合游戏","SG 定理"],"fields":{"slug":"/post/math/combinatorial/SG/"}},{"title":"快速傅里叶变换和雷德算法","createdAt":"2016-04-10","tags":["acm","大数乘法","fft","快速傅里叶变换"],"fields":{"slug":"/post/math/number-theory/fft/"}},{"title":"数论基础之筛法","createdAt":"2016-05-06","tags":["math","数论","素数","欧拉函数","线性筛"],"fields":{"slug":"/post/math/number-theory/sieve/"}},{"title":"数论基础之原根","createdAt":"2016-05-16","tags":["math","数论","原根"],"fields":{"slug":"/post/math/number-theory/原根/"}},{"title":"数论基础之欧拉函数","createdAt":"2016-05-10","tags":["math","数论","既约剩余系","欧拉函数"],"fields":{"slug":"/post/math/number-theory/欧拉函数/"}},{"title":"约瑟夫环问题","createdAt":"2021-07-16","tags":["quiz","经典问题","约瑟夫环"],"fields":{"slug":"/post/quiz/classical/Josephus-ring/"}},{"title":"扔鸡蛋问题","createdAt":"2021-06-20","tags":["quiz","动态规划"],"fields":{"slug":"/post/quiz/dp/egg-drop/"}},{"title":"在 excel 中启用正则表达式","createdAt":"2021-03-29","tags":["excel","tools"],"fields":{"slug":"/post/tool/excel/regex/"}},{"title":"百度之星 2016 解题报告","createdAt":"2016-06-03","tags":["acm","递推","状态压缩","动态规划","字典树","解题报告"],"fields":{"slug":"/post/acm/contest/baiduzhixing/2016/"}},{"title":"51nod-1462 数据结构 -- 解题报告","createdAt":"2016-04-23","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/51nod/1462/"}},{"title":"HDU-5306 Gorgeous Sequence 解题报告","createdAt":"2016-04-09","tags":["acm","数据结构","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5306/"}},{"title":"HDU-5574 Colorful Tree 解题报告（原 2015-上海区域赛-C）","createdAt":"2016-04-12","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5574/"}},{"title":"HDU-5576 Expection of String 解题报告（原 2015-上海区域赛-E)","createdAt":"2016-04-24","tags":["acm","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5576/"}},{"title":"剑指offer 解题报告","createdAt":"2021-07-15","tags":["专题训练","解题报告"],"fields":{"slug":"/post/acm/oj/nowcoder/jz-offer/"}},{"title":"POJ-1324 Holedox Moving 解题报告","createdAt":"2016-04-13","tags":["acm","bfs","图论","状态压缩","解题报告"],"fields":{"slug":"/post/acm/oj/poj/1324/"}},{"title":"网络流 24 题","createdAt":"2016-07-30","tags":["acm","算法","图论","网络流","二分图","解题报告","专题训练"],"fields":{"slug":"/post/algorithm/graph/network-flow/24-problems/"}},{"title":"网络流基础之最大权闭合图","createdAt":"2016-07-24","tags":["算法","图论","网络流","最大权闭合图"],"fields":{"slug":"/post/algorithm/graph/network-flow/最大权闭合图/"}},{"title":"Dijkstra 算法","createdAt":"2021-05-29","tags":["算法","最短路","单源最短路","dijkstra"],"fields":{"slug":"/post/algorithm/graph/shortest-path/dijkstra/"}},{"title":"Custom React Hooks","createdAt":"2020-10-29","tags":["react","react hooks"],"fields":{"slug":"/post/web/react/hooks/custom/"}},{"title":"2016 多校第 2 场","createdAt":"2016-07-22","tags":["acm","训练赛","数据结构","解题报告"],"fields":{"slug":"/post/acm/contest/multi-university-training/2016/2/"}},{"title":"CCF 2015-09 最佳文章 解题报告","createdAt":"2016-06-26","tags":["acm","Aho-Corasick 自动机","矩阵快速幂","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/ccf/2015/09/E/"}},{"title":"数论基础之模方程初步","createdAt":"2016-05-04","tags":["math","数论","扩展欧几里得算法","中国剩余定理","Baby Step Gaint Step"],"fields":{"slug":"/post/math/number-theory/模方程/basic/"}}]}},"pageContext":{"id":"76ce341e-d2af-58cd-8cae-fe09023f3cad","contentType":"post","paginationUrl":"/posts","previousPostId":"94c35b1c-7337-5d6b-be9b-596e07a60b0e","nextPostId":"f2e7cd77-e003-575d-b17b-3d60e00b1d03"}},"staticQueryHashes":[],"slicesMap":{}}