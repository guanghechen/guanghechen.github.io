{"componentChunkName":"component---src-layout-post-post-list-tsx","path":"/posts/5/","result":{"data":{"allMarkdownYozora":{"nodes":[{"title":"ECMA 2021 新特性","description":"New features in ECMA 2021","createdAt":"2021-04-05","updatedAt":null,"timeToRead":"0min 27s","categories":[],"tags":["javascript","ecmascript"],"ecmaImports":[],"definitionMap":{},"footnoteDefinitionMap":{},"excerptAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"逻辑赋值运算符"}],"identifier":"heading-逻辑赋值运算符"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"||="},{"type":"text","value":": "},{"type":"inlineCode","value":"a ||= b"},{"type":"text","value":" 等价于 "},{"type":"inlineCode","value":"a || (a = b)"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"&&="},{"type":"text","value":": "},{"type":"inlineCode","value":"a &&= b"},{"type":"text","value":" 等价于 "},{"type":"inlineCode","value":"a && (a = b)"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"??="},{"type":"text","value":": "},{"type":"inlineCode","value":"a ??= b"},{"type":"text","value":" 等价于 "},{"type":"inlineCode","value":"a ?? (a = b)"}]}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"数字分隔符 "},{"type":"inlineCode","value":"_"}],"identifier":"heading-数字分隔符"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"Demo"}]},{"type":"code","lang":"typescript","meta":null,"value":"2_000_000   // ==> 2000000\n2_000_000n  // ==> 2000000\n"}]}]},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Promise.any()"}],"identifier":"heading-promise-any"},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"String.prototype.replaceAll()"}],"identifier":"heading-string-prototype-replaceall"},{"type":"heading","depth":2,"children":[{"type":"text","value":"Related"}],"identifier":"heading-related"},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"link","url":"https://exploringjs.com/impatient-js/ch_new-javascript-features.html#new-in-es2021","children":[{"type":"text","value":"New Javascript Features"}]}]}]}]},"fields":{"slug":"/post/web/javascript/2021/"}},{"title":"在 excel 中启用正则表达式","description":"Enable Regex in Excel","createdAt":"2021-03-30","updatedAt":null,"timeToRead":"1min 51s","categories":[],"tags":["excel","tools"],"ecmaImports":[],"definitionMap":{"excel-enable-vba.png":{"type":"definition","identifier":"excel-enable-vba.png","label":"excel-enable-vba.png","url":"/static/a1670910ce45a4fbf8e0abc0f3d170be/0227d/excel-enable-vba.png"},"excel-enable-vba-regex.png":{"type":"definition","identifier":"excel-enable-vba-regex.png","label":"excel-enable-vba-regex.png","url":"/static/a241f22ce90662f16f96885edaf14dea/0227d/excel-enable-vba-regex.png"},"excel-import-regex-script.png":{"type":"definition","identifier":"excel-import-regex-script.png","label":"excel-import-regex-script.png","url":"/static/77d4c8cb28d17e2e864e5f0e061dddf4/0227d/excel-import-regex-script.png"},"excel-regex-demo1.png":{"type":"definition","identifier":"excel-regex-demo1.png","label":"excel-regex-demo1.png","url":"/static/81b85943925570a1220dcbe9064e395f/a123e/excel-regex-demo1.png"}},"footnoteDefinitionMap":{},"excerptAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage"}],"identifier":"heading-usage"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"启用 VBA ("},{"type":"inlineCode","value":"*.xlsm"},{"type":"text","value":" 文件中有效)"}]},{"type":"list","ordered":false,"marker":45,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"在 Excel 中："},{"type":"inlineCode","value":"文件"},{"type":"text","value":" --> "},{"type":"inlineCode","value":"选项"},{"type":"text","value":" --> "},{"type":"inlineCode","value":"自定义功能区"},{"type":"text","value":" 勾选 "},{"type":"inlineCode","value":"开发工具"}]}]},{"type":"paragraph","children":[{"type":"imageReference","identifier":"excel-enable-vba.png","label":"excel-enable-vba.png","referenceType":"collapsed","alt":"excel-enable-vba.png","src":"/static/a1670910ce45a4fbf8e0abc0f3d170be/0227d/excel-enable-vba.png","srcSet":"/static/a1670910ce45a4fbf8e0abc0f3d170be/fa83e/excel-enable-vba.png 163w,\n/static/a1670910ce45a4fbf8e0abc0f3d170be/f0ade/excel-enable-vba.png 325w,\n/static/a1670910ce45a4fbf8e0abc0f3d170be/0227d/excel-enable-vba.png 650w,\n/static/a1670910ce45a4fbf8e0abc0f3d170be/9c83c/excel-enable-vba.png 975w,\n/static/a1670910ce45a4fbf8e0abc0f3d170be/77654/excel-enable-vba.png 1039w","sizes":"(max-width: 650px) 100vw, 650px","loading":"lazy","decoding":"async"}]}]},{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"启用 "},{"type":"emphasis","children":[{"type":"text","value":"Microsoft VBScript Regular Expressions5.5"}]},{"type":"text","value":" 模块"}]},{"type":"list","ordered":false,"marker":45,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"打开 "},{"type":"emphasis","children":[{"type":"text","value":"Visual Basic"}]},{"type":"text","value":" 编辑器："},{"type":"inlineCode","value":"开发工具"},{"type":"text","value":" --> "},{"type":"inlineCode","value":"Visual Basic"}]},{"type":"listItem","children":[{"type":"text","value":"在 "},{"type":"emphasis","children":[{"type":"text","value":"Visual Basic"}]},{"type":"text","value":" 编辑器中打开："},{"type":"inlineCode","value":"工具"},{"type":"text","value":" --> "},{"type":"inlineCode","value":"引用"}]},{"type":"listItem","children":[{"type":"text","value":"在弹出的对话框中勾选 "},{"type":"inlineCode","value":"Microsoft VBScript Regular Expressions 5.5"}]}]},{"type":"paragraph","children":[{"type":"imageReference","identifier":"excel-enable-vba-regex.png","label":"excel-enable-vba-regex.png","referenceType":"collapsed","alt":"excel-enable-vba-regex.png","src":"/static/a241f22ce90662f16f96885edaf14dea/0227d/excel-enable-vba-regex.png","srcSet":"/static/a241f22ce90662f16f96885edaf14dea/fa83e/excel-enable-vba-regex.png 163w,\n/static/a241f22ce90662f16f96885edaf14dea/f0ade/excel-enable-vba-regex.png 325w,\n/static/a241f22ce90662f16f96885edaf14dea/0227d/excel-enable-vba-regex.png 650w,\n/static/a241f22ce90662f16f96885edaf14dea/9c83c/excel-enable-vba-regex.png 975w,\n/static/a241f22ce90662f16f96885edaf14dea/87678/excel-enable-vba-regex.png 1159w","sizes":"(max-width: 650px) 100vw, 650px","loading":"lazy","decoding":"async"}]}]}]},{"type":"html","value":"<!-- more -->\n"}]},"fields":{"slug":"/post/tool/excel/regex/"}},{"title":"CSS 选择器","description":"CSS 选择器","createdAt":"2020-11-02","updatedAt":null,"timeToRead":"2min 51s","categories":[],"tags":["web","frontend","css"],"ecmaImports":[],"definitionMap":{},"footnoteDefinitionMap":{},"excerptAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"选择器优先级"}],"identifier":"heading-选择器优先级"},{"type":"list","ordered":false,"marker":42,"spread":true,"children":[{"type":"listItem","children":[{"type":"paragraph","children":[{"type":"text","value":"CSS 选择器类型的优先级： "},{"type":"inlineCode","value":"内联样式"},{"type":"text","value":" "},{"type":"inlineMath","value":"\\gt"},{"type":"text","value":" "},{"type":"inlineCode","value":"ID 选择器"},{"type":"text","value":" "},{"type":"inlineMath","value":"\\gt"},{"type":"text","value":" "},{"type":"inlineCode","value":"类选择器"},{"type":"text","value":" "},{"type":"inlineMath","value":"\\gt"},{"type":"text","value":" "},{"type":"inlineCode","value":"标签选择器"}]},{"type":"paragraph","children":[{"type":"text","value":"具体计算规则如下，其中 "},{"type":"inlineMath","value":"(a, b, c, d)"},{"type":"text","value":" 将作为向量比较大小，即左侧的数值有绝对优先权"}]},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A specificity is determined by plugging numbers into "},{"type":"inlineMath","value":"(a, b, c, d)"},{"type":"text","value":":"}]},{"type":"list","ordered":false,"marker":45,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"If the styles are applied via the style attribute, "},{"type":"inlineMath","value":"a=1"},{"type":"text","value":"; otherwise, "},{"type":"inlineMath","value":"a=0"},{"type":"text","value":"."}]},{"type":"listItem","children":[{"type":"inlineMath","value":"b"},{"type":"text","value":" is equal to the number of "},{"type":"inlineCode","value":"ID selectors"},{"type":"text","value":" present."}]},{"type":"listItem","children":[{"type":"inlineMath","value":"c"},{"type":"text","value":" is equal to the number of "},{"type":"inlineCode","value":"class selectors"}]}]}]}]}]}]},"fields":{"slug":"/post/web/css/selector/"}},{"title":"Custom React Hooks","description":"Custom React Hooks","createdAt":"2020-10-30","updatedAt":null,"timeToRead":"1min 13s","categories":[],"tags":["react","react hooks"],"ecmaImports":[],"definitionMap":{},"footnoteDefinitionMap":{},"excerptAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareCallback"}],"identifier":"heading-usedeepcomparecallback"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useCallback"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareCallback.ts\" sourcefile=\"./useDeepCompareCallback.ts\" collapsed linenos","value":"import isEqual from '@guanghechen/fast-deep-equal'\nimport type React from 'react'\nimport { useCallback, useRef } from 'react'\n\n/**\n * Deep compare version of React.useCallback\n * @param fn\n * @param deps\n */\nexport function useDeepCompareCallback<T extends (...args: any[]) => any>(\n  fn: T,\n  deps: React.DependencyList,\n): T {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  return useCallback(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareEffect"}],"identifier":"heading-usedeepcompareeffect"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useEffect"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareEffect.ts\" sourcefile=\"./useDeepCompareEffect.ts\" collapsed linenos","value":"import isEqual from '@guanghechen/fast-deep-equal'\nimport type React from 'react'\nimport { useEffect, useRef } from 'react'\n\n/**\n * Deep compare version of React.useEffect\n * @param fn\n * @param deps\n */\nexport function useDeepCompareEffect(fn: React.EffectCallback, deps: React.DependencyList): void {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  useEffect(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useDeepCompareMemo"}],"identifier":"heading-usedeepcomparememo"},{"type":"paragraph","children":[{"type":"text","value":"Deep compare version of "},{"type":"inlineCode","value":"React.useMemo"}]},{"type":"code","lang":"tsx","meta":"title=\"useDeepCompareMemo.ts\" sourcefile=\"./useDeepCompareMemo.ts\" collapsed linenos","value":"import isEqual from '@guanghechen/fast-deep-equal'\nimport type React from 'react'\nimport { useMemo, useRef } from 'react'\n\n/**\n * Deep compare version of React.useMemo\n * @param fn\n * @param deps\n */\nexport function useDeepCompareMemo<T>(fn: () => T, deps: React.DependencyList): T {\n  const signal = useRef<number>(0)\n  const prevDeps = useRef<React.DependencyList>(deps)\n\n  if (!isEqual(prevDeps.current, deps)) {\n    signal.current += 1\n  }\n  prevDeps.current = deps\n\n  return useMemo(fn, [signal.current])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useInterval"}],"identifier":"heading-useinterval"},{"type":"paragraph","children":[{"type":"text","value":"Execute callback interval in react function components."}]},{"type":"code","lang":"tsx","meta":"title=\"userInterval.ts\" sourcefile=\"./useInterval.ts\" collapsed linenos","value":"import { useEffect, useRef } from 'react'\n\ntype Callback = () => void\n\n/**\n * Execute callback interval in react function components.\n * @param callback\n * @param delay\n */\nexport function useInterval(callback: Callback, delay: number): void {\n  const callbackRef = useRef<Callback>(callback)\n\n  useEffect(() => {\n    callbackRef.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    const tick: Callback = () => {\n      if (callbackRef.current === undefined) return\n      callbackRef.current()\n    }\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"usePreviousState"}],"identifier":"heading-usepreviousstate"},{"type":"paragraph","children":[{"type":"text","value":"记录上一个状态。"}]},{"type":"paragraph","children":[{"type":"text","value":"利用更新 "},{"type":"inlineCode","value":"ref.current"},{"type":"text","value":" 的值不会触发组件更新的特性，在 "},{"type":"inlineCode","value":"usePreviousState"},{"type":"text","value":" 中总是返回旧的值，尽管在 "},{"type":"inlineCode","value":"userPreviousState"},{"type":"text","value":" 的 "},{"type":"inlineCode","value":"useEffect"},{"type":"text","value":" 中更新了新值，但并不触发更新。"}]},{"type":"code","lang":"tsx","meta":"title=\"usePreviousState.ts\" sourcefile=\"./usePreviousState.ts\" collapsed linenos","value":"import { useEffect, useRef } from 'react'\n\n/**\n * Use previous state.\n * @param value\n * @returns\n */\nexport function usePreviousState<T extends unknown = any>(value: T): T {\n  const ref = useRef<T>(value)\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n"},{"type":"heading","depth":2,"children":[{"type":"text","value":"useReactiveRef"}],"identifier":"heading-usereactiveref"},{"type":"code","lang":"tsx","meta":"title=\"useReactiveRef.ts\" sourcefile=\"./useReactiveRef.ts\" collapsed linenos","value":"import type React from 'react'\nimport { useEffect, useRef } from 'react'\n\n/**\n * Create a reactive ref which will follow the changes of the given data.\n * @param data\n * @returns\n */\nexport function useReactiveRef<T>(data: T): React.MutableRefObject<T> {\n  const ref = useRef(data)\n  useEffect(() => {\n    ref.current = data\n  }, [data])\n  return ref\n}\n"},{"type":"html","value":"<!-- more -->\n"}]},"fields":{"slug":"/post/web/react/hooks/custom/"}},{"title":"组合游戏基础之 SG 函数和 SG 定理","description":"组合游戏基础之 SG 函数和 SG 定理","createdAt":"2016-09-04","updatedAt":null,"timeToRead":"8min 31s","categories":[],"tags":["组合数学","组合游戏","SG 定理"],"ecmaImports":[],"definitionMap":{"51nod-1661-problem":{"type":"definition","identifier":"51nod-1661-problem","label":"51nod-1661-problem","url":"https://www.51nod.com/Challenge/Problem.html#problemId=1661"},"51nod-1661-solution":{"type":"definition","identifier":"51nod-1661-solution","label":"51nod-1661-solution","url":"/static/9c3184a98d78a092350d349978db6cbbea0c6eb6/51node-1661.cpp"}},"footnoteDefinitionMap":{"footnote-1":{"type":"footnoteDefinition","identifier":"footnote-1","label":"1","children":[{"type":"paragraph","children":[{"type":"text","value":"因为此次异或运算消除了最高位，所以显然有 "},{"type":"inlineMath","value":"X\\oplus x_i < x_i"},{"type":"text","value":"，即此操作总是可以达成的"}]}]}},"excerptAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"NP 状态描述"}],"identifier":"heading-np-状态描述"},{"type":"list","ordered":false,"marker":42,"spread":false,"children":[{"type":"listItem","children":[{"type":"text","value":"无法进行任何移动的局面为 P-position"}]},{"type":"listItem","children":[{"type":"text","value":"可以移动到 P-position 的局面为 N-position"}]},{"type":"listItem","children":[{"type":"text","value":"任意移动都到达 N-position 的局面为 P-position"}]}]},{"type":"heading","depth":2,"children":[{"type":"text","value":"Nim 游戏"}],"identifier":"heading-nim-游戏"},{"type":"paragraph","children":[{"type":"text","value":"Nim 游戏是组合游戏中的经典游戏，描述如下：有 "},{"type":"inlineMath","value":"n"},{"type":"text","value":" 堆石子，第 "},{"type":"inlineMath","value":"i"},{"type":"text","value":" 堆有 "},{"type":"inlineMath","value":"x_i"},{"type":"text","value":" 颗石子。"},{"type":"inlineMath","value":"A"},{"type":"text","value":"、"},{"type":"inlineMath","value":"B"},{"type":"text","value":" 两人轮流取石子，每次仅能选择一堆不为空的石子进行操作：取走至少一颗石子。不能操作的人输。"}]},{"type":"paragraph","children":[{"type":"text","value":"关于 Nim 游戏有一个著名的结论：当且仅当 "},{"type":"inlineMath","value":"x_1\\oplus x_2\\oplus\\cdots\\oplus x_n=0"},{"type":"text","value":"\n时，先手获胜；否则后手胜。证明很简单，当\n"},{"type":"inlineMath","value":"X=x_1\\oplus x_2\\oplus\\cdots\\oplus x_n\\neq 0"}]}]},"fields":{"slug":"/post/math/combinatorial/SG/"}}]},"postItems":{"nodes":[{"title":"Custom React Hooks","createdAt":"2020-10-30","tags":["react","react hooks"],"fields":{"slug":"/post/web/react/hooks/custom/"}},{"title":"React Reconciliation","createdAt":"2021-06-27","tags":["react","react reconciliation"],"fields":{"slug":"/post/web/react/reconciliation/"}},{"title":"ECMA 2020 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2020/"}},{"title":"XSS 与 CSRF 的攻防","createdAt":"2021-08-19","tags":["web","web security","csrf"],"fields":{"slug":"/post/web/security/xss-csrf/"}},{"title":"Javascript 踩坑记——继承和原型链","createdAt":"2021-09-05","tags":["studynote","javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/inherit/"}},{"title":"CSS 选择器","createdAt":"2020-11-02","tags":["web","frontend","css"],"fields":{"slug":"/post/web/css/selector/"}},{"title":"ECMA 2021 新特性","createdAt":"2021-04-05","tags":["javascript","ecmascript"],"fields":{"slug":"/post/web/javascript/2021/"}},{"title":"在 excel 中启用正则表达式","createdAt":"2021-03-30","tags":["excel","tools"],"fields":{"slug":"/post/tool/excel/regex/"}},{"title":"统计区间内的线段","createdAt":"2021-07-21","tags":["quiz","扫描线","前缀和","树状数组","线段树"],"fields":{"slug":"/post/quiz/scanning-line/segments/"}},{"title":"约瑟夫环问题","createdAt":"2021-07-17","tags":["quiz","经典问题","约瑟夫环"],"fields":{"slug":"/post/quiz/classical/Josephus-ring/"}},{"title":"端口管理","createdAt":"2021-06-20","tags":["network","port","ssh","netstat"],"fields":{"slug":"/post/network/端口管理/"}},{"title":"数论基础之欧拉函数","createdAt":"2016-05-10","tags":["math","数论","既约剩余系","欧拉函数"],"fields":{"slug":"/post/math/number-theory/欧拉函数/"}},{"title":"扔鸡蛋问题","createdAt":"2021-06-20","tags":["quiz","动态规划"],"fields":{"slug":"/post/quiz/dp/egg-drop/"}},{"title":"数论基础之模方程初步","createdAt":"2016-05-04","tags":["math","数论","扩展欧几里得算法","中国剩余定理","Baby Step Gaint Step"],"fields":{"slug":"/post/math/number-theory/模方程/basic/"}},{"title":"不修改数组找出重复的数字","createdAt":"2021-06-29","tags":["quiz","分治","追击"],"fields":{"slug":"/post/quiz/partition/find-duplicate-number/"}},{"title":"数论基础之原根","createdAt":"2016-05-16","tags":["math","数论","原根"],"fields":{"slug":"/post/math/number-theory/原根/"}},{"title":"快速傅里叶变换和雷德算法","createdAt":"2016-04-10","tags":["acm","大数乘法","fft","快速傅里叶变换"],"fields":{"slug":"/post/math/number-theory/fft/"}},{"title":"小球放盒模型","createdAt":"2016-04-22","tags":["math","组合数学"],"fields":{"slug":"/post/math/combinatorial/小球放盒模型/"}},{"title":"组合游戏基础之 SG 函数和 SG 定理","createdAt":"2016-09-04","tags":["组合数学","组合游戏","SG 定理"],"fields":{"slug":"/post/math/combinatorial/SG/"}},{"title":"数论基础之筛法","createdAt":"2016-05-06","tags":["math","数论","素数","欧拉函数","线性筛"],"fields":{"slug":"/post/math/number-theory/sieve/"}},{"title":"函数的极限","createdAt":"2021-05-09","tags":["math","函数","极限"],"fields":{"slug":"/post/math/calculus/函数的极限/"}},{"title":"当你想来一把数独","createdAt":"2021-08-01","tags":["game","sudoku"],"fields":{"slug":"/post/game/sudoku/"}},{"title":"编译原理-语法制导翻译实现计算器","createdAt":"2016-06-23","tags":["编译原理","语法制导翻译","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/exercise/"}},{"title":"编译原理-语法分析","createdAt":"2016-06-18","tags":["编译原理","语法分析","计算机"],"fields":{"slug":"/post/fundamentals-of-compiling/grammar/"}},{"title":"伸展树专题","createdAt":"2016-07-03","tags":["acm","Splay","解题报告","专题训练"],"fields":{"slug":"/post/data-structure/bbst/splay/"}},{"title":"洗牌问题和 knuth-shuffle 算法","createdAt":"2021-07-22","tags":["shuffle","knuth-shuffle","约瑟夫环"],"fields":{"slug":"/post/algorithm/shuffle/"}},{"title":"自然对数底数e","createdAt":"2021-08-07","tags":["math","函数","极限","自然对数"],"fields":{"slug":"/post/math/calculus/自然对数底数e/"}},{"title":"树链剖分","createdAt":"2016-04-23","tags":["acm","算法","树链剖分"],"fields":{"slug":"/post/algorithm/tree/tcs/"}},{"title":"最长上升子序列（LIS）","createdAt":"2021-06-02","tags":["最长上升子序列","LIS"],"fields":{"slug":"/post/algorithm/lis/"}},{"title":"最长回文子串 Manacher 算法","createdAt":"2016-04-18","tags":["算法","字符串","回文串","manacher"],"fields":{"slug":"/post/algorithm/string/manacher/"}},{"title":"最长公共子序列（LCS）","createdAt":"2021-06-02","tags":["最长公共子序列","LCS"],"fields":{"slug":"/post/algorithm/lcs/"}},{"title":"背包九讲","createdAt":"2021-06-27","tags":["acm","算法","动态规划","背包问题"],"fields":{"slug":"/post/algorithm/knapsack/"}},{"title":"Dijkstra 算法","createdAt":"2021-05-29","tags":["算法","最短路","单源最短路","dijkstra"],"fields":{"slug":"/post/algorithm/graph/shortest-path/dijkstra/"}},{"title":"二分图","createdAt":"2016-07-17","tags":["算法","图论","二分图","学习笔记"],"fields":{"slug":"/post/algorithm/graph/bipartite-graph/"}},{"title":"防抖和节流","createdAt":"2021-09-03","tags":["coding","debounce","throttle"],"fields":{"slug":"/post/algorithm/debounce-and-throttle/"}},{"title":"精确覆盖问题和 DLX 算法","createdAt":"2021-07-24","tags":["算法","精确覆盖","DLX 算法"],"fields":{"slug":"/post/algorithm/dlx/"}},{"title":"POJ-1324 Holedox Moving 解题报告","createdAt":"2016-04-13","tags":["acm","bfs","图论","状态压缩","解题报告"],"fields":{"slug":"/post/acm/oj/poj/1324/"}},{"title":"网络流 24 题","createdAt":"2016-07-30","tags":["acm","算法","图论","网络流","二分图","解题报告","专题训练"],"fields":{"slug":"/post/algorithm/graph/network-flow/24-problems/"}},{"title":"网络流基础之最大权闭合图","createdAt":"2016-07-24","tags":["算法","图论","网络流","最大权闭合图"],"fields":{"slug":"/post/algorithm/graph/network-flow/最大权闭合图/"}},{"title":"HDU-5576 Expection of String 解题报告（原 2015-上海区域赛-E)","createdAt":"2016-04-24","tags":["acm","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5576/"}},{"title":"剑指offer 解题报告","createdAt":"2021-07-15","tags":["专题训练","解题报告"],"fields":{"slug":"/post/acm/oj/nowcoder/jz-offer/"}},{"title":"2016 多校第 2 场","createdAt":"2016-07-22","tags":["acm","训练赛","数据结构","解题报告"],"fields":{"slug":"/post/acm/contest/multi-university-training/2016/2/"}},{"title":"HDU-5306 Gorgeous Sequence 解题报告","createdAt":"2016-04-09","tags":["acm","数据结构","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5306/"}},{"title":"51nod-1462 数据结构 -- 解题报告","createdAt":"2016-04-23","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/51nod/1462/"}},{"title":"百度之星 2016 解题报告","createdAt":"2016-06-03","tags":["acm","递推","状态压缩","动态规划","字典树","解题报告"],"fields":{"slug":"/post/acm/contest/baiduzhixing/2016/"}},{"title":"CCF 2015-09 最佳文章 解题报告","createdAt":"2016-06-26","tags":["acm","Aho-Corasick 自动机","矩阵快速幂","动态规划","解题报告"],"fields":{"slug":"/post/acm/oj/ccf/2015/09/E/"}},{"title":"HDU-5574 Colorful Tree 解题报告（原 2015-上海区域赛-C）","createdAt":"2016-04-12","tags":["acm","数据结构","树链剖分","线段树","解题报告"],"fields":{"slug":"/post/acm/oj/hdu/5574/"}}]}},"pageContext":{"contentType":"post","paginationUrl":"/posts","urlPrefix":"/posts","pageTotal":10,"pageSize":5,"pageCurrent":5,"limit":5,"skip":20}},"staticQueryHashes":[],"slicesMap":{}}